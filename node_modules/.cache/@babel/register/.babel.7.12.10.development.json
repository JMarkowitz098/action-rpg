{
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/test/game_object_test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/test/game_object_test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/test/game_object_test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/test/game_object_test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
        "sourceFileName": "game_object_test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar chai = _interopRequireWildcard(require(\"chai\"));\n\nvar _game_object = _interopRequireDefault(require(\"../src/game_object\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// import assert from 'assert';\nvar should = chai.should();\nvar expect = chai.expect;\ndescribe('Game Object Tests', function () {\n  var attributes = {\n    pos: {\n      x: 5,\n      y: 10\n    },\n    vel: 1,\n    dir: 'up',\n    color: 'blue'\n  };\n  var myObject = new _game_object[\"default\"](attributes);\n  it('should create an object with given attributes', function () {\n    myObject.should.have.property('x').equal(5);\n    myObject.should.have.property('y').equal(10);\n    myObject.should.have.property('vel').equal(1);\n    myObject.should.have.property('dir').equal('up');\n    myObject.should.have.property('color').equal('blue');\n  });\n  it('should only have properties that were passed in', function () {\n    myObject.should.not.have.property('ctx');\n  });\n  it('should not have extra properties', function () {\n    var possibleGameObjectKeys = ['x', 'y', 'ctx', 'vel', 'dir', 'color'];\n    var myObjKeys = Object.keys(myObject);\n    expect(possibleGameObjectKeys).to.include.members(myObjKeys);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbWVfb2JqZWN0X3Rlc3QuanMiXSwibmFtZXMiOlsic2hvdWxkIiwiY2hhaSIsImV4cGVjdCIsImRlc2NyaWJlIiwiYXR0cmlidXRlcyIsInBvcyIsIngiLCJ5IiwidmVsIiwiZGlyIiwiY29sb3IiLCJteU9iamVjdCIsIkdhbWVPYmplY3QiLCJpdCIsImhhdmUiLCJwcm9wZXJ0eSIsImVxdWFsIiwibm90IiwicG9zc2libGVHYW1lT2JqZWN0S2V5cyIsIm15T2JqS2V5cyIsIk9iamVjdCIsImtleXMiLCJ0byIsImluY2x1ZGUiLCJtZW1iZXJzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRkE7QUFJQSxJQUFJQSxNQUFNLEdBQUdDLElBQUksQ0FBQ0QsTUFBTCxFQUFiO0FBQ0EsSUFBSUUsTUFBTSxHQUFHRCxJQUFJLENBQUNDLE1BQWxCO0FBR0FDLFFBQVEsQ0FBQyxtQkFBRCxFQUFxQixZQUFNO0FBQy9CLE1BQU1DLFVBQVUsR0FBRztBQUNmQyxJQUFBQSxHQUFHLEVBQUU7QUFBRUMsTUFBQUEsQ0FBQyxFQUFFLENBQUw7QUFBUUMsTUFBQUEsQ0FBQyxFQUFFO0FBQVgsS0FEVTtBQUVmQyxJQUFBQSxHQUFHLEVBQUUsQ0FGVTtBQUdmQyxJQUFBQSxHQUFHLEVBQUUsSUFIVTtBQUlmQyxJQUFBQSxLQUFLLEVBQUU7QUFKUSxHQUFuQjtBQU1BLE1BQUlDLFFBQVEsR0FBRyxJQUFJQyx1QkFBSixDQUFlUixVQUFmLENBQWY7QUFFQVMsRUFBQUEsRUFBRSxDQUFDLCtDQUFELEVBQWtELFlBQU07QUFDdERGLElBQUFBLFFBQVEsQ0FBQ1gsTUFBVCxDQUFnQmMsSUFBaEIsQ0FBcUJDLFFBQXJCLENBQThCLEdBQTlCLEVBQW1DQyxLQUFuQyxDQUF5QyxDQUF6QztBQUNBTCxJQUFBQSxRQUFRLENBQUNYLE1BQVQsQ0FBZ0JjLElBQWhCLENBQXFCQyxRQUFyQixDQUE4QixHQUE5QixFQUFtQ0MsS0FBbkMsQ0FBeUMsRUFBekM7QUFDQUwsSUFBQUEsUUFBUSxDQUFDWCxNQUFULENBQWdCYyxJQUFoQixDQUFxQkMsUUFBckIsQ0FBOEIsS0FBOUIsRUFBcUNDLEtBQXJDLENBQTJDLENBQTNDO0FBQ0FMLElBQUFBLFFBQVEsQ0FBQ1gsTUFBVCxDQUFnQmMsSUFBaEIsQ0FBcUJDLFFBQXJCLENBQThCLEtBQTlCLEVBQXFDQyxLQUFyQyxDQUEyQyxJQUEzQztBQUNBTCxJQUFBQSxRQUFRLENBQUNYLE1BQVQsQ0FBZ0JjLElBQWhCLENBQXFCQyxRQUFyQixDQUE4QixPQUE5QixFQUF1Q0MsS0FBdkMsQ0FBNkMsTUFBN0M7QUFDSCxHQU5DLENBQUY7QUFRQUgsRUFBQUEsRUFBRSxDQUFDLGlEQUFELEVBQW9ELFlBQU07QUFDeERGLElBQUFBLFFBQVEsQ0FBQ1gsTUFBVCxDQUFnQmlCLEdBQWhCLENBQW9CSCxJQUFwQixDQUF5QkMsUUFBekIsQ0FBa0MsS0FBbEM7QUFDSCxHQUZDLENBQUY7QUFJQUYsRUFBQUEsRUFBRSxDQUFDLGtDQUFELEVBQXFDLFlBQU07QUFDekMsUUFBTUssc0JBQXNCLEdBQUcsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEtBQVgsRUFBa0IsS0FBbEIsRUFBeUIsS0FBekIsRUFBZ0MsT0FBaEMsQ0FBL0I7QUFDQSxRQUFNQyxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZVixRQUFaLENBQWxCO0FBRUFULElBQUFBLE1BQU0sQ0FBRWdCLHNCQUFGLENBQU4sQ0FBZ0NJLEVBQWhDLENBQW1DQyxPQUFuQyxDQUEyQ0MsT0FBM0MsQ0FBbURMLFNBQW5EO0FBQ0gsR0FMQyxDQUFGO0FBTUgsQ0EzQk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvamFyZWQvRGVza3RvcC9Db2RpbmcvYWN0aW9uX3JwZy90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcbmltcG9ydCAqIGFzIGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgR2FtZU9iamVjdCBmcm9tICcuLi9zcmMvZ2FtZV9vYmplY3QnXG5cbmxldCBzaG91bGQgPSBjaGFpLnNob3VsZCgpO1xubGV0IGV4cGVjdCA9IGNoYWkuZXhwZWN0O1xuXG5cbmRlc2NyaWJlKCdHYW1lIE9iamVjdCBUZXN0cycsKCkgPT4ge1xuICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7XG4gICAgICAgIHBvczogeyB4OiA1LCB5OiAxMCwgfSxcbiAgICAgICAgdmVsOiAxLFxuICAgICAgICBkaXI6ICd1cCcsXG4gICAgICAgIGNvbG9yOiAnYmx1ZScsXG4gICAgfVxuICAgIGxldCBteU9iamVjdCA9IG5ldyBHYW1lT2JqZWN0KGF0dHJpYnV0ZXMpXG5cbiAgICBpdCgnc2hvdWxkIGNyZWF0ZSBhbiBvYmplY3Qgd2l0aCBnaXZlbiBhdHRyaWJ1dGVzJywgKCkgPT4ge1xuICAgICAgICBteU9iamVjdC5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgneCcpLmVxdWFsKDUpXG4gICAgICAgIG15T2JqZWN0LnNob3VsZC5oYXZlLnByb3BlcnR5KCd5JykuZXF1YWwoMTApXG4gICAgICAgIG15T2JqZWN0LnNob3VsZC5oYXZlLnByb3BlcnR5KCd2ZWwnKS5lcXVhbCgxKVxuICAgICAgICBteU9iamVjdC5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnZGlyJykuZXF1YWwoJ3VwJylcbiAgICAgICAgbXlPYmplY3Quc2hvdWxkLmhhdmUucHJvcGVydHkoJ2NvbG9yJykuZXF1YWwoJ2JsdWUnKVxuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBvbmx5IGhhdmUgcHJvcGVydGllcyB0aGF0IHdlcmUgcGFzc2VkIGluJywgKCkgPT4ge1xuICAgICAgICBteU9iamVjdC5zaG91bGQubm90LmhhdmUucHJvcGVydHkoJ2N0eCcpXG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIG5vdCBoYXZlIGV4dHJhIHByb3BlcnRpZXMnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBvc3NpYmxlR2FtZU9iamVjdEtleXMgPSBbJ3gnLCAneScsICdjdHgnLCAndmVsJywgJ2RpcicsICdjb2xvciddXG4gICAgICAgIGNvbnN0IG15T2JqS2V5cyA9IE9iamVjdC5rZXlzKG15T2JqZWN0KVxuICAgICAgICBcbiAgICAgICAgZXhwZWN0IChwb3NzaWJsZUdhbWVPYmplY3RLZXlzKS50by5pbmNsdWRlLm1lbWJlcnMobXlPYmpLZXlzKVxuICAgIH0pXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "game_object_test.js"
      ],
      "names": [
        "should",
        "chai",
        "expect",
        "describe",
        "attributes",
        "pos",
        "x",
        "y",
        "vel",
        "dir",
        "color",
        "myObject",
        "GameObject",
        "it",
        "have",
        "property",
        "equal",
        "not",
        "possibleGameObjectKeys",
        "myObjKeys",
        "Object",
        "keys",
        "to",
        "include",
        "members"
      ],
      "mappings": ";;;;AACA;;AACA;;;;;;;;AAFA;AAIA,IAAIA,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAb;AACA,IAAIE,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAGAC,QAAQ,CAAC,mBAAD,EAAqB,YAAM;AAC/B,MAAMC,UAAU,GAAG;AACfC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KADU;AAEfC,IAAAA,GAAG,EAAE,CAFU;AAGfC,IAAAA,GAAG,EAAE,IAHU;AAIfC,IAAAA,KAAK,EAAE;AAJQ,GAAnB;AAMA,MAAIC,QAAQ,GAAG,IAAIC,uBAAJ,CAAeR,UAAf,CAAf;AAEAS,EAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACtDF,IAAAA,QAAQ,CAACX,MAAT,CAAgBc,IAAhB,CAAqBC,QAArB,CAA8B,GAA9B,EAAmCC,KAAnC,CAAyC,CAAzC;AACAL,IAAAA,QAAQ,CAACX,MAAT,CAAgBc,IAAhB,CAAqBC,QAArB,CAA8B,GAA9B,EAAmCC,KAAnC,CAAyC,EAAzC;AACAL,IAAAA,QAAQ,CAACX,MAAT,CAAgBc,IAAhB,CAAqBC,QAArB,CAA8B,KAA9B,EAAqCC,KAArC,CAA2C,CAA3C;AACAL,IAAAA,QAAQ,CAACX,MAAT,CAAgBc,IAAhB,CAAqBC,QAArB,CAA8B,KAA9B,EAAqCC,KAArC,CAA2C,IAA3C;AACAL,IAAAA,QAAQ,CAACX,MAAT,CAAgBc,IAAhB,CAAqBC,QAArB,CAA8B,OAA9B,EAAuCC,KAAvC,CAA6C,MAA7C;AACH,GANC,CAAF;AAQAH,EAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAM;AACxDF,IAAAA,QAAQ,CAACX,MAAT,CAAgBiB,GAAhB,CAAoBH,IAApB,CAAyBC,QAAzB,CAAkC,KAAlC;AACH,GAFC,CAAF;AAIAF,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AACzC,QAAMK,sBAAsB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,KAAX,EAAkB,KAAlB,EAAyB,KAAzB,EAAgC,OAAhC,CAA/B;AACA,QAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYV,QAAZ,CAAlB;AAEAT,IAAAA,MAAM,CAAEgB,sBAAF,CAAN,CAAgCI,EAAhC,CAAmCC,OAAnC,CAA2CC,OAA3C,CAAmDL,SAAnD;AACH,GALC,CAAF;AAMH,CA3BO,CAAR",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "sourcesContent": [
        "// import assert from 'assert';\nimport * as chai from 'chai';\nimport GameObject from '../src/game_object'\n\nlet should = chai.should();\nlet expect = chai.expect;\n\n\ndescribe('Game Object Tests',() => {\n    const attributes = {\n        pos: { x: 5, y: 10, },\n        vel: 1,\n        dir: 'up',\n        color: 'blue',\n    }\n    let myObject = new GameObject(attributes)\n\n    it('should create an object with given attributes', () => {\n        myObject.should.have.property('x').equal(5)\n        myObject.should.have.property('y').equal(10)\n        myObject.should.have.property('vel').equal(1)\n        myObject.should.have.property('dir').equal('up')\n        myObject.should.have.property('color').equal('blue')\n    });\n\n    it('should only have properties that were passed in', () => {\n        myObject.should.not.have.property('ctx')\n    });\n\n    it('should not have extra properties', () => {\n        const possibleGameObjectKeys = ['x', 'y', 'ctx', 'vel', 'dir', 'color']\n        const myObjKeys = Object.keys(myObject)\n        \n        expect (possibleGameObjectKeys).to.include.members(myObjKeys)\n    })\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1610046796006
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/src/game_object.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/src/game_object.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/src/game_object.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/src/game_object.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
        "sourceFileName": "game_object.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GameObject = function GameObject(_ref) {\n  var ctx = _ref.ctx,\n      pos = _ref.pos,\n      vel = _ref.vel,\n      dir = _ref.dir,\n      color = _ref.color;\n\n  _classCallCheck(this, GameObject);\n\n  this.x = pos.x;\n  this.y = pos.y;\n  if (ctx) this.ctx = ctx;\n  if (vel) this.vel = vel;\n  if (dir) this.dir = dir;\n  if (color) this.color = color; //Remove when everything is a sprite\n};\n\nvar _default = GameObject;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbWVfb2JqZWN0LmpzIl0sIm5hbWVzIjpbIkdhbWVPYmplY3QiLCJjdHgiLCJwb3MiLCJ2ZWwiLCJkaXIiLCJjb2xvciIsIngiLCJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7SUFDTUEsVSxHQUNGLDBCQUF3QztBQUFBLE1BQTNCQyxHQUEyQixRQUEzQkEsR0FBMkI7QUFBQSxNQUF0QkMsR0FBc0IsUUFBdEJBLEdBQXNCO0FBQUEsTUFBakJDLEdBQWlCLFFBQWpCQSxHQUFpQjtBQUFBLE1BQVpDLEdBQVksUUFBWkEsR0FBWTtBQUFBLE1BQVBDLEtBQU8sUUFBUEEsS0FBTzs7QUFBQTs7QUFDcEMsT0FBS0MsQ0FBTCxHQUFTSixHQUFHLENBQUNJLENBQWI7QUFDQSxPQUFLQyxDQUFMLEdBQVNMLEdBQUcsQ0FBQ0ssQ0FBYjtBQUNBLE1BQUlOLEdBQUosRUFBUyxLQUFLQSxHQUFMLEdBQVdBLEdBQVg7QUFDVCxNQUFJRSxHQUFKLEVBQVMsS0FBS0EsR0FBTCxHQUFXQSxHQUFYO0FBQ1QsTUFBSUMsR0FBSixFQUFTLEtBQUtBLEdBQUwsR0FBV0EsR0FBWDtBQUNULE1BQUlDLEtBQUosRUFBVyxLQUFLQSxLQUFMLEdBQWFBLEtBQWIsQ0FOeUIsQ0FNTjtBQUNqQyxDOztlQUdVTCxVIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qYXJlZC9EZXNrdG9wL0NvZGluZy9hY3Rpb25fcnBnL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmNsYXNzIEdhbWVPYmplY3Qge1xuICAgIGNvbnN0cnVjdG9yKHtjdHgsIHBvcywgdmVsLCBkaXIsIGNvbG9yfSl7XG4gICAgICAgIHRoaXMueCA9IHBvcy54XG4gICAgICAgIHRoaXMueSA9IHBvcy55XG4gICAgICAgIGlmIChjdHgpIHRoaXMuY3R4ID0gY3R4XG4gICAgICAgIGlmICh2ZWwpIHRoaXMudmVsID0gdmVsXG4gICAgICAgIGlmIChkaXIpIHRoaXMuZGlyID0gZGlyXG4gICAgICAgIGlmIChjb2xvcikgdGhpcy5jb2xvciA9IGNvbG9yIC8vUmVtb3ZlIHdoZW4gZXZlcnl0aGluZyBpcyBhIHNwcml0ZVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgR2FtZU9iamVjdCJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "game_object.js"
      ],
      "names": [
        "GameObject",
        "ctx",
        "pos",
        "vel",
        "dir",
        "color",
        "x",
        "y"
      ],
      "mappings": ";;;;;;;;;IACMA,U,GACF,0BAAwC;AAAA,MAA3BC,GAA2B,QAA3BA,GAA2B;AAAA,MAAtBC,GAAsB,QAAtBA,GAAsB;AAAA,MAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,MAAZC,GAAY,QAAZA,GAAY;AAAA,MAAPC,KAAO,QAAPA,KAAO;;AAAA;;AACpC,OAAKC,CAAL,GAASJ,GAAG,CAACI,CAAb;AACA,OAAKC,CAAL,GAASL,GAAG,CAACK,CAAb;AACA,MAAIN,GAAJ,EAAS,KAAKA,GAAL,GAAWA,GAAX;AACT,MAAIE,GAAJ,EAAS,KAAKA,GAAL,GAAWA,GAAX;AACT,MAAIC,GAAJ,EAAS,KAAKA,GAAL,GAAWA,GAAX;AACT,MAAIC,KAAJ,EAAW,KAAKA,KAAL,GAAaA,KAAb,CANyB,CAMN;AACjC,C;;eAGUL,U",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "sourcesContent": [
        "\nclass GameObject {\n    constructor({ctx, pos, vel, dir, color}){\n        this.x = pos.x\n        this.y = pos.y\n        if (ctx) this.ctx = ctx\n        if (vel) this.vel = vel\n        if (dir) this.dir = dir\n        if (color) this.color = color //Remove when everything is a sprite\n    }\n}\n\nexport default GameObject"
      ]
    },
    "sourceType": "script",
    "mtime": 1610235253027
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/test/hero_test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/test/hero_test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/test/hero_test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/test/hero_test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
        "sourceFileName": "hero_test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar _sinon = _interopRequireDefault(require(\"sinon\"));\n\nvar _hero = _interopRequireDefault(require(\"../src/hero\"));\n\nvar _faker = _interopRequireDefault(require(\"faker\"));\n\nvar chai = _interopRequireWildcard(require(\"chai\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar should = chai.should();\nvar expect = chai.expect; // describe('Hero Creation Tests', () => {\n//     const attributes = {\n//         pos: { x: 5, y: 10, },\n//         vel: 1,\n//         dir: 'up',\n//         color: 'blue',\n//     }\n//     let myHero = new Hero(attributes)\n//     it('should create an object with given attributes', () => {\n//         // myObject.should.have.property('x').equal(5)\n//         // myObject.should.have.property('y').equal(10)\n//         // myObject.should.have.property('vel').equal(1)\n//         // myObject.should.have.property('dir').equal('up')\n//         // myObject.should.have.property('color').equal('blue')\n//     });\n//     it('should start hero with 3 health', () => {\n//         const attributes = {\n//             pos: { x: 5, y: 10, },\n//             vel: 1,\n//             dir: 'up',\n//             color: 'blue',\n//         }\n//         const healthStub = sinon.stub()\n//         console.log(healthStub)\n//     });\n// });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlcm9fdGVzdC5qcyJdLCJuYW1lcyI6WyJzaG91bGQiLCJjaGFpIiwiZXhwZWN0Il0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBSUEsTUFBTSxHQUFHQyxJQUFJLENBQUNELE1BQUwsRUFBYjtBQUNBLElBQUlFLE1BQU0sR0FBR0QsSUFBSSxDQUFDQyxNQUFsQixDLENBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvamFyZWQvRGVza3RvcC9Db2RpbmcvYWN0aW9uX3JwZy90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcbmltcG9ydCBzaW5vbiBmcm9tICdzaW5vbidcbmltcG9ydCBIZXJvIGZyb20gJy4uL3NyYy9oZXJvJ1xuaW1wb3J0IGZha2VyIGZyb20gJ2Zha2VyJ1xuaW1wb3J0ICogYXMgY2hhaSBmcm9tICdjaGFpJztcblxubGV0IHNob3VsZCA9IGNoYWkuc2hvdWxkKCk7XG5sZXQgZXhwZWN0ID0gY2hhaS5leHBlY3Q7XG5cblxuLy8gZGVzY3JpYmUoJ0hlcm8gQ3JlYXRpb24gVGVzdHMnLCAoKSA9PiB7XG4vLyAgICAgY29uc3QgYXR0cmlidXRlcyA9IHtcbi8vICAgICAgICAgcG9zOiB7IHg6IDUsIHk6IDEwLCB9LFxuLy8gICAgICAgICB2ZWw6IDEsXG4vLyAgICAgICAgIGRpcjogJ3VwJyxcbi8vICAgICAgICAgY29sb3I6ICdibHVlJyxcbi8vICAgICB9XG4vLyAgICAgbGV0IG15SGVybyA9IG5ldyBIZXJvKGF0dHJpYnV0ZXMpXG5cblxuXG4vLyAgICAgaXQoJ3Nob3VsZCBjcmVhdGUgYW4gb2JqZWN0IHdpdGggZ2l2ZW4gYXR0cmlidXRlcycsICgpID0+IHtcblxuLy8gICAgICAgICAvLyBteU9iamVjdC5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgneCcpLmVxdWFsKDUpXG4vLyAgICAgICAgIC8vIG15T2JqZWN0LnNob3VsZC5oYXZlLnByb3BlcnR5KCd5JykuZXF1YWwoMTApXG4vLyAgICAgICAgIC8vIG15T2JqZWN0LnNob3VsZC5oYXZlLnByb3BlcnR5KCd2ZWwnKS5lcXVhbCgxKVxuLy8gICAgICAgICAvLyBteU9iamVjdC5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnZGlyJykuZXF1YWwoJ3VwJylcbi8vICAgICAgICAgLy8gbXlPYmplY3Quc2hvdWxkLmhhdmUucHJvcGVydHkoJ2NvbG9yJykuZXF1YWwoJ2JsdWUnKVxuXG4vLyAgICAgfSk7XG5cbi8vICAgICBpdCgnc2hvdWxkIHN0YXJ0IGhlcm8gd2l0aCAzIGhlYWx0aCcsICgpID0+IHtcblxuLy8gICAgICAgICBjb25zdCBhdHRyaWJ1dGVzID0ge1xuLy8gICAgICAgICAgICAgcG9zOiB7IHg6IDUsIHk6IDEwLCB9LFxuLy8gICAgICAgICAgICAgdmVsOiAxLFxuLy8gICAgICAgICAgICAgZGlyOiAndXAnLFxuLy8gICAgICAgICAgICAgY29sb3I6ICdibHVlJyxcbi8vICAgICAgICAgfVxuXG4vLyAgICAgICAgIGNvbnN0IGhlYWx0aFN0dWIgPSBzaW5vbi5zdHViKClcbi8vICAgICAgICAgY29uc29sZS5sb2coaGVhbHRoU3R1YilcblxuLy8gICAgIH0pO1xuXG4vLyB9KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "hero_test.js"
      ],
      "names": [
        "should",
        "chai",
        "expect"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAIA,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAb;AACA,IAAIE,MAAM,GAAGD,IAAI,CAACC,MAAlB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "sourcesContent": [
        "import assert from 'assert';\nimport sinon from 'sinon'\nimport Hero from '../src/hero'\nimport faker from 'faker'\nimport * as chai from 'chai';\n\nlet should = chai.should();\nlet expect = chai.expect;\n\n\n// describe('Hero Creation Tests', () => {\n//     const attributes = {\n//         pos: { x: 5, y: 10, },\n//         vel: 1,\n//         dir: 'up',\n//         color: 'blue',\n//     }\n//     let myHero = new Hero(attributes)\n\n\n\n//     it('should create an object with given attributes', () => {\n\n//         // myObject.should.have.property('x').equal(5)\n//         // myObject.should.have.property('y').equal(10)\n//         // myObject.should.have.property('vel').equal(1)\n//         // myObject.should.have.property('dir').equal('up')\n//         // myObject.should.have.property('color').equal('blue')\n\n//     });\n\n//     it('should start hero with 3 health', () => {\n\n//         const attributes = {\n//             pos: { x: 5, y: 10, },\n//             vel: 1,\n//             dir: 'up',\n//             color: 'blue',\n//         }\n\n//         const healthStub = sinon.stub()\n//         console.log(healthStub)\n\n//     });\n\n// });"
      ]
    },
    "sourceType": "script",
    "mtime": 1610232486713
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/src/hero.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/src/hero.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/src/hero.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/src/hero.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
        "sourceFileName": "hero.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar C = _interopRequireWildcard(require(\"./constants\"));\n\nvar _weapon = _interopRequireDefault(require(\"./weapon\"));\n\nvar _game_object = _interopRequireDefault(require(\"./game_object\"));\n\nvar _health = _interopRequireDefault(require(\"./health\"));\n\nvar _hero_movement = _interopRequireDefault(require(\"./hero_movement\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Hero = /*#__PURE__*/function (_GameObject) {\n  _inherits(Hero, _GameObject);\n\n  var _super = _createSuper(Hero);\n\n  function Hero(attributes) {\n    var _this;\n\n    _classCallCheck(this, Hero);\n\n    attributes = _objectSpread(_objectSpread({}, attributes), {}, {\n      dir: C.DIR_DOWN,\n      vel: C.HERO_START_DIR,\n      color: C.HERO_COLOR\n    });\n    _this = _super.call(this, attributes);\n    _this.health = _this.createStartingHealth(C.HERO_START_HEALTH);\n    _this.weapon = new _weapon[\"default\"]({\n      ctx: attributes.ctx\n    });\n    _this.movement = new _hero_movement[\"default\"]({\n      width: C.HERO_SPRITE_SCALED_WIDTH,\n      length: C.HERO_SPRITE_SCALED_LENGTH\n    });\n\n    _this.initSprite();\n\n    return _this;\n  }\n\n  _createClass(Hero, [{\n    key: \"draw\",\n    value: function draw() {\n      var x = this.x,\n          y = this.y,\n          spriteDirection = this.spriteDirection,\n          hasMoved = this.hasMoved,\n          spritePositions = this.spritePositions,\n          ctx = this.ctx;\n\n      if (this.color === C.HERO_COLOR) {\n        if (C.TOOGGLE_DRAW_HITBOXES) this.drawHitBox();\n        if (hasMoved) this.changeFrameAttributes();\n        this.drawFrame(spritePositions[this.spritePositionsIdx], spriteDirection, x, y);\n      } else {\n        ctx.fillStyle = this.color;\n        ctx.fillRect(x, y, C.HERO_SPRITE_SCALED_WIDTH, C.HERO_SPRITE_SCALED_LENGTH);\n      }\n    }\n  }, {\n    key: \"changeFrameAttributes\",\n    value: function changeFrameAttributes() {\n      this.frameCount++;\n\n      if (this.frameCount >= C.FRAME_LIMIT) {\n        this.frameCount = 0;\n        this.changeSpritePositions();\n      }\n    }\n  }, {\n    key: \"changeSpritePositions\",\n    value: function changeSpritePositions() {\n      this.spritePositionsIdx++;\n      if (this.spritePositionsIdx >= this.spritePositions.length) this.spritePositionsIdx = 0;\n    }\n  }, {\n    key: \"drawFrame\",\n    value: function drawFrame(frameX, frameY, canvasX, canvasY) {\n      var ctx = this.ctx,\n          image = this.image;\n      ctx.drawImage(image, //image source\n      frameX, //sx\n      frameY, //sy\n      C.HERO_WIDTH, //sWIDTH\n      C.HERO_LENGTH, //sHEIGHT\n      canvasX, //dX\n      canvasY, //dY\n      C.HERO_SPRITE_SCALED_WIDTH, //dWIDTH\n      C.HERO_SPRITE_SCALED_LENGTH //dHEIGHT\n      );\n    }\n  }, {\n    key: \"initSprite\",\n    value: function initSprite() {\n      var image = new Image();\n      image.src = '/Users/jared/Desktop/Coding/action_rpg/Patreon sprites 1/14.png';\n      this.image = image;\n      this.spriteDirection = C.HERO_SPRITE_FACING_DOWN;\n      this.frameCount = 0;\n      this.spritePositions = C.HERO_SPRITE_X_POSITIONS;\n      this.spritePositionsIdx = 0;\n      this.hasMoved = false;\n    }\n  }, {\n    key: \"createStartingHealth\",\n    value: function createStartingHealth(numHealth) {\n      var health = [];\n\n      for (var i = 0; i < numHealth; i++) {\n        var attributes = {\n          pos: {\n            x: 40 * i + C.HEALTH_START_X,\n            y: C.HEALTH_START_Y\n          },\n          ctx: this.ctx\n        };\n        var heart = new _health[\"default\"](attributes);\n        health.push(heart);\n      }\n\n      return health;\n    }\n  }, {\n    key: \"decreaseHealth\",\n    value: function decreaseHealth() {\n      var _this2 = this;\n\n      this.health.pop();\n      this.color = 'purple';\n      setTimeout(function () {\n        return _this2.color = C.HERO_COLOR;\n      }, 3000);\n    }\n  }, {\n    key: \"isVulnerable\",\n    value: function isVulnerable() {\n      return this.color === C.HERO_COLOR; //Change to isVulnerable property\n    }\n  }, {\n    key: \"changeDir\",\n    value: function changeDir(keysDown) {\n      this.dir = this.movement.changeDir(keysDown, this.dir);\n    }\n  }, {\n    key: \"changeVel\",\n    value: function changeVel(vel) {\n      this.vel = vel;\n    }\n  }, {\n    key: \"collidedWith\",\n    value: function collidedWith(enemy) {\n      var enemyX = enemy.x;\n      var enemyY = enemy.y;\n      var enemyLength = C.ENEMY_SPRITE_SCALED_LENGTH;\n      var enemyWidth = C.ENEMY_SPRITE_SCALED_WIDTH;\n      var heroWidth = C.HERO_SPRITE_SCALED_WIDTH;\n      var heroLength = C.HERO_SPRITE_SCALED_LENGTH; // Detect if 2 rectangles have collided\n\n      return this.x < enemyX + enemyWidth && this.x + heroWidth > enemyX && this.y < enemyY + enemyLength && this.y + heroLength > enemyY;\n    }\n  }, {\n    key: \"useWeapon\",\n    value: function useWeapon() {\n      this.weapon.takeOut({\n        x: this.x,\n        y: this.y,\n        heroDir: this.dir\n      });\n    }\n  }, {\n    key: \"getSpriteDir\",\n    value: function getSpriteDir() {\n      var dir = this.dir;\n\n      switch (dir) {\n        case C.DIR_UP:\n          return C.HERO_SPRITE_FACING_UP;\n\n        case C.DIR_DOWN:\n          return C.HERO_SPRITE_FACING_DOWN;\n\n        case C.DIR_LEFT:\n          return C.HERO_SPRITE_FACING_LEFT;\n\n        case C.DIR_RIGHT:\n          return C.HERO_SPRITE_FACING_RIGHT;\n\n        case C.DIR_LEFT_UP:\n        case C.DIR_RIGHT_UP:\n          return C.HERO_SPRITE_FACING_UP;\n\n        case C.DIR_DOWN_LEFT:\n        case C.DIR_DOWN_RIGHT:\n          return C.HERO_SPRITE_FACING_DOWN;\n      }\n    }\n  }, {\n    key: \"drawHitBox\",\n    value: function drawHitBox() {\n      var x = this.x,\n          y = this.y,\n          ctx = this.ctx;\n      ctx.strokeStyle = \"green\";\n      ctx.strokeRect(x, y, C.HERO_SPRITE_SCALED_WIDTH, C.HERO_SPRITE_SCALED_LENGTH);\n    }\n  }, {\n    key: \"move\",\n    value: function move() {\n      var newPos = this.movement.move({\n        x: this.x,\n        y: this.y,\n        dir: this.dir,\n        vel: this.vel\n      });\n      this.x = newPos.x;\n      this.y = newPos.y;\n      this.spriteDirection = this.getSpriteDir();\n      this.hasMoved = newPos.moved;\n    }\n  }, {\n    key: \"dash\",\n    value: function dash() {\n      var _this3 = this;\n\n      this.changeVel(C.HERO_DASH_SPEED);\n      setTimeout(function () {\n        return _this3.changeVel(1);\n      }, C.HERO_DASH_TIME);\n    }\n  }]);\n\n  return Hero;\n}(_game_object[\"default\"]);\n\nvar _default = Hero;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "hero.js"
      ],
      "names": [
        "Hero",
        "attributes",
        "dir",
        "C",
        "DIR_DOWN",
        "vel",
        "HERO_START_DIR",
        "color",
        "HERO_COLOR",
        "health",
        "createStartingHealth",
        "HERO_START_HEALTH",
        "weapon",
        "Weapon",
        "ctx",
        "movement",
        "HeroMovement",
        "width",
        "HERO_SPRITE_SCALED_WIDTH",
        "length",
        "HERO_SPRITE_SCALED_LENGTH",
        "initSprite",
        "x",
        "y",
        "spriteDirection",
        "hasMoved",
        "spritePositions",
        "TOOGGLE_DRAW_HITBOXES",
        "drawHitBox",
        "changeFrameAttributes",
        "drawFrame",
        "spritePositionsIdx",
        "fillStyle",
        "fillRect",
        "frameCount",
        "FRAME_LIMIT",
        "changeSpritePositions",
        "frameX",
        "frameY",
        "canvasX",
        "canvasY",
        "image",
        "drawImage",
        "HERO_WIDTH",
        "HERO_LENGTH",
        "Image",
        "src",
        "HERO_SPRITE_FACING_DOWN",
        "HERO_SPRITE_X_POSITIONS",
        "numHealth",
        "i",
        "pos",
        "HEALTH_START_X",
        "HEALTH_START_Y",
        "heart",
        "Health",
        "push",
        "pop",
        "setTimeout",
        "keysDown",
        "changeDir",
        "enemy",
        "enemyX",
        "enemyY",
        "enemyLength",
        "ENEMY_SPRITE_SCALED_LENGTH",
        "enemyWidth",
        "ENEMY_SPRITE_SCALED_WIDTH",
        "heroWidth",
        "heroLength",
        "takeOut",
        "heroDir",
        "DIR_UP",
        "HERO_SPRITE_FACING_UP",
        "DIR_LEFT",
        "HERO_SPRITE_FACING_LEFT",
        "DIR_RIGHT",
        "HERO_SPRITE_FACING_RIGHT",
        "DIR_LEFT_UP",
        "DIR_RIGHT_UP",
        "DIR_DOWN_LEFT",
        "DIR_DOWN_RIGHT",
        "strokeStyle",
        "strokeRect",
        "newPos",
        "move",
        "getSpriteDir",
        "moved",
        "changeVel",
        "HERO_DASH_SPEED",
        "HERO_DASH_TIME",
        "GameObject"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "sourcesContent": [
        "import * as C from './constants'\nimport Weapon from './weapon'\nimport GameObject from './game_object'\nimport Health from './health'\nimport HeroMovement from './hero_movement'\n\n\n\nclass Hero extends GameObject {\n    constructor(attributes){\n        attributes = { \n            ...attributes, \n            dir: C.DIR_DOWN, \n            vel: C.HERO_START_DIR, \n            color: C.HERO_COLOR\n        }\n        super(attributes)\n\n        this.health = this.createStartingHealth(C.HERO_START_HEALTH)\n        this.weapon = new Weapon({ctx: attributes.ctx})\n        this.movement = new HeroMovement({\n            width: C.HERO_SPRITE_SCALED_WIDTH,\n            length: C.HERO_SPRITE_SCALED_LENGTH\n        })\n\n        this.initSprite()\n    }\n\n    draw() {\n        const { x, y, spriteDirection, hasMoved, spritePositions, ctx} = this\n\n        if(this.color === C.HERO_COLOR){\n            if (C.TOOGGLE_DRAW_HITBOXES) this.drawHitBox()\n            if(hasMoved) this.changeFrameAttributes()\n            this.drawFrame(\n                spritePositions[this.spritePositionsIdx], \n                spriteDirection, \n                x, y\n            );\n        } else {\n            ctx.fillStyle = this.color;\n            ctx.fillRect(\n                x, y, C.HERO_SPRITE_SCALED_WIDTH, C.HERO_SPRITE_SCALED_LENGTH\n            );\n        }\n    }\n\n    changeFrameAttributes(){\n        this.frameCount++;\n        if (this.frameCount >= C.FRAME_LIMIT) {\n            this.frameCount = 0;\n            this.changeSpritePositions()\n        }\n    }\n\n    changeSpritePositions(){\n        this.spritePositionsIdx++;\n        if (this.spritePositionsIdx >= this.spritePositions.length)\n            this.spritePositionsIdx = 0;\n    }\n\n    drawFrame(frameX, frameY, canvasX, canvasY) {\n        const { ctx, image } = this;\n        ctx.drawImage(\n            image, //image source\n            frameX, //sx\n            frameY, //sy\n            C.HERO_WIDTH, //sWIDTH\n            C.HERO_LENGTH, //sHEIGHT\n            canvasX, //dX\n            canvasY, //dY\n            C.HERO_SPRITE_SCALED_WIDTH, //dWIDTH\n            C.HERO_SPRITE_SCALED_LENGTH //dHEIGHT\n        ); \n    }\n\n    initSprite(){\n        let image = new Image\n        image.src = '/Users/jared/Desktop/Coding/action_rpg/Patreon sprites 1/14.png'\n        this.image = image\n        this.spriteDirection = C.HERO_SPRITE_FACING_DOWN\n        this.frameCount = 0;\n        this.spritePositions = C.HERO_SPRITE_X_POSITIONS\n        this.spritePositionsIdx = 0;\n        this.hasMoved = false;\n    }\n\n    createStartingHealth(numHealth){\n        let health = []\n\n        for(let i = 0; i < numHealth; i++){\n            let attributes = {\n                pos: {\n                    x: (40 * i + C.HEALTH_START_X),\n                    y: C.HEALTH_START_Y\n                },\n                ctx: this.ctx\n            }\n            let heart = new Health(attributes)\n            health.push(heart)\n        }\n\n        return health\n    }\n\n    decreaseHealth(){\n        this.health.pop();\n        this.color = 'purple'\n        setTimeout(() => this.color = C.HERO_COLOR, 3000)\n    }\n    \n    isVulnerable(){\n        return this.color === C.HERO_COLOR //Change to isVulnerable property\n    }\n\n    changeDir(keysDown){\n        this.dir = this.movement.changeDir(keysDown, this.dir)\n    }\n\n    changeVel(vel){\n        this.vel = vel\n    }\n\n    collidedWith(enemy){\n        const enemyX = enemy.x\n        const enemyY = enemy.y\n        const enemyLength = C.ENEMY_SPRITE_SCALED_LENGTH\n        const enemyWidth = C.ENEMY_SPRITE_SCALED_WIDTH\n        const heroWidth = C.HERO_SPRITE_SCALED_WIDTH\n        const heroLength = C.HERO_SPRITE_SCALED_LENGTH\n\n        // Detect if 2 rectangles have collided\n        return (this.x < enemyX + enemyWidth &&\n            this.x + heroWidth > enemyX &&\n            this.y < enemyY + enemyLength &&\n            this.y + heroLength > enemyY) \n    }\n\n    useWeapon(){\n        this.weapon.takeOut({x: this.x, y: this.y, heroDir: this.dir})\n    }\n\n    getSpriteDir(){\n        const { dir } =  this \n        switch(dir){\n            case C.DIR_UP:\n                return C.HERO_SPRITE_FACING_UP\n            case C.DIR_DOWN:\n                return C.HERO_SPRITE_FACING_DOWN\n            case C.DIR_LEFT:\n                return C.HERO_SPRITE_FACING_LEFT\n            case C.DIR_RIGHT:\n                return C.HERO_SPRITE_FACING_RIGHT\n            case C.DIR_LEFT_UP:\n            case C.DIR_RIGHT_UP:\n                return C.HERO_SPRITE_FACING_UP\n            case C.DIR_DOWN_LEFT:\n            case C.DIR_DOWN_RIGHT:\n                return C.HERO_SPRITE_FACING_DOWN\n        }\n    }\n\n    drawHitBox() {\n        const { x, y, ctx } = this;\n        ctx.strokeStyle = \"green\";\n        ctx.strokeRect(\n            x,\n            y,\n            C.HERO_SPRITE_SCALED_WIDTH,\n            C.HERO_SPRITE_SCALED_LENGTH\n        );\n    }\n\n    move(){\n        let newPos = this.movement.move({\n            x: this.x,\n            y: this.y,\n            dir: this.dir,\n            vel: this.vel\n        })\n\n        this.x = newPos.x\n        this.y = newPos.y\n        this.spriteDirection = this.getSpriteDir()\n        this.hasMoved = newPos.moved\n    }\n\n    dash(){\n        this.changeVel(C.HERO_DASH_SPEED)\n        setTimeout(() => this.changeVel(1), C.HERO_DASH_TIME)\n    }\n}\n\nexport default Hero"
      ]
    },
    "sourceType": "script",
    "mtime": 1610238161476
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/src/constants.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/src/constants.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/src/constants.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/src/constants.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
        "sourceFileName": "constants.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WEAPON_DIR_DIAG_RIGHT = exports.WEAPON_DIR_DIAG_LEFT = exports.WEAPON_DIR_VERTICAL = exports.WEAPON_DIR_HORIZONTAL = exports.WEAPON_DIST = exports.WEAPON_WIDTH = exports.WEAPON_LENGTH = exports.WEAPON_COLOR = exports.HERO_SPRITE_FACING_LEFT = exports.HERO_SPRITE_FACING_UP = exports.HERO_SPRITE_FACING_RIGHT = exports.HERO_SPRITE_FACING_DOWN = exports.HERO_SPRITE_X_POSITIONS = exports.HERO_SPRITE_SCALED_LENGTH = exports.HERO_SPRITE_SCALED_WIDTH = exports.HERO_SPRITE_SCALE = exports.HERO_DASH_TIME = exports.HERO_DASH_SPEED = exports.HERO_START_HEALTH = exports.HERO_START_DIR = exports.HERO_START_POS = exports.HERO_MOVE_LENGTH = exports.HERO_WIDTH = exports.HERO_LENGTH = exports.HERO_DASH_VEL = exports.HERO_NORMAL_VEL = exports.HERO_DASH_KEY = exports.HERO_COLOR = exports.HEALTH_START_Y = exports.HEALTH_START_X = exports.HEALTH_LENGTH = exports.HEALTH_COLOR = exports.FRAME_LIMIT = exports.ENEMY_SPRITE_FACING_LEFT = exports.ENEMY_SPRITE_FACING_UP = exports.ENEMY_SPRITE_FACING_RIGHT = exports.ENEMY_SPRITE_FACING_DOWN = exports.ENEMY_SPRITE_X_POSITIONS = exports.ENEMY_SPRITE_SCALED_LENGTH = exports.ENEMY_SPRITE_SCALED_WIDTH = exports.ENEMY_SPRITE_SCALE = exports.ENEMY_START_VEL = exports.ENEMY_SPAWN_RATE = exports.ENEMY_MOVE_LENGTH = exports.ENEMY_WIDTH = exports.ENEMY_LENGTH = exports.ENEMY_SIZE = exports.DIR_OPTIONS = exports.DIR_POSSIBLE_MOVES = exports.DIR_DOWN_LEFT = exports.DIR_DOWN_RIGHT = exports.DIR_RIGHT_UP = exports.DIR_LEFT_UP = exports.DIR_UP = exports.DIR_RIGHT = exports.DIR_LEFT = exports.DIR_DOWN = exports.PLAY_AREA_SY = exports.PLAY_AREA_SX = exports.PLAY_AREA_S_HEIGHT = exports.PLAY_AREA_S_WIDTH = exports.PLAY_AREA_OUTSIDE_COLOR = exports.PLAY_AREA_RIGHT_BOUNDARY = exports.PLAY_AREA_LEFT_BOUNDARY = exports.PLAY_AREA_DOWN_BOUNDARY = exports.PLAY_AREA_UP_BOUNDARY = exports.PLAY_AREA_COLOR = exports.PLAY_AREA_START_POS = exports.PLAY_AREA_SIDE_LENGTH = exports.CANVAS_LENGTH = exports.CANVAS_WIDTH = exports.UNIT = exports.TOOGGLE_DRAW_HITBOXES = exports.TOGGLE_ENEMY_SPAWN = exports.TOGGLE_ENEMY_MOVEMENT = void 0;\nvar TOGGLE_ENEMY_MOVEMENT = true;\nexports.TOGGLE_ENEMY_MOVEMENT = TOGGLE_ENEMY_MOVEMENT;\nvar TOGGLE_ENEMY_SPAWN = false;\nexports.TOGGLE_ENEMY_SPAWN = TOGGLE_ENEMY_SPAWN;\nvar TOOGGLE_DRAW_HITBOXES = true;\nexports.TOOGGLE_DRAW_HITBOXES = TOOGGLE_DRAW_HITBOXES;\nvar UNIT = 5;\nexports.UNIT = UNIT;\nvar CANVAS_WIDTH = 600;\nexports.CANVAS_WIDTH = CANVAS_WIDTH;\nvar CANVAS_LENGTH = 600;\nexports.CANVAS_LENGTH = CANVAS_LENGTH;\nvar PLAY_AREA_SIDE_LENGTH = 500;\nexports.PLAY_AREA_SIDE_LENGTH = PLAY_AREA_SIDE_LENGTH;\nvar PLAY_AREA_START_POS = 50;\nexports.PLAY_AREA_START_POS = PLAY_AREA_START_POS;\nvar PLAY_AREA_COLOR = 'black';\nexports.PLAY_AREA_COLOR = PLAY_AREA_COLOR;\nvar PLAY_AREA_UP_BOUNDARY = 0 + PLAY_AREA_START_POS;\nexports.PLAY_AREA_UP_BOUNDARY = PLAY_AREA_UP_BOUNDARY;\nvar PLAY_AREA_DOWN_BOUNDARY = 0 + PLAY_AREA_START_POS + PLAY_AREA_SIDE_LENGTH;\nexports.PLAY_AREA_DOWN_BOUNDARY = PLAY_AREA_DOWN_BOUNDARY;\nvar PLAY_AREA_LEFT_BOUNDARY = 0 + PLAY_AREA_START_POS;\nexports.PLAY_AREA_LEFT_BOUNDARY = PLAY_AREA_LEFT_BOUNDARY;\nvar PLAY_AREA_RIGHT_BOUNDARY = 0 + PLAY_AREA_START_POS + PLAY_AREA_SIDE_LENGTH;\nexports.PLAY_AREA_RIGHT_BOUNDARY = PLAY_AREA_RIGHT_BOUNDARY;\nvar PLAY_AREA_OUTSIDE_COLOR = 'white';\nexports.PLAY_AREA_OUTSIDE_COLOR = PLAY_AREA_OUTSIDE_COLOR;\nvar PLAY_AREA_S_WIDTH = 457;\nexports.PLAY_AREA_S_WIDTH = PLAY_AREA_S_WIDTH;\nvar PLAY_AREA_S_HEIGHT = 415;\nexports.PLAY_AREA_S_HEIGHT = PLAY_AREA_S_HEIGHT;\nvar PLAY_AREA_SX = 12;\nexports.PLAY_AREA_SX = PLAY_AREA_SX;\nvar PLAY_AREA_SY = 32;\nexports.PLAY_AREA_SY = PLAY_AREA_SY;\nvar DIR_DOWN = 'down';\nexports.DIR_DOWN = DIR_DOWN;\nvar DIR_LEFT = 'left';\nexports.DIR_LEFT = DIR_LEFT;\nvar DIR_RIGHT = 'right';\nexports.DIR_RIGHT = DIR_RIGHT;\nvar DIR_UP = 'up';\nexports.DIR_UP = DIR_UP;\nvar DIR_LEFT_UP = DIR_LEFT + ' ' + DIR_UP;\nexports.DIR_LEFT_UP = DIR_LEFT_UP;\nvar DIR_RIGHT_UP = DIR_RIGHT + ' ' + DIR_UP;\nexports.DIR_RIGHT_UP = DIR_RIGHT_UP;\nvar DIR_DOWN_RIGHT = DIR_DOWN + ' ' + DIR_RIGHT;\nexports.DIR_DOWN_RIGHT = DIR_DOWN_RIGHT;\nvar DIR_DOWN_LEFT = DIR_DOWN + ' ' + DIR_LEFT;\nexports.DIR_DOWN_LEFT = DIR_DOWN_LEFT;\nvar DIR_POSSIBLE_MOVES = [DIR_DOWN, DIR_LEFT, DIR_UP, DIR_RIGHT, DIR_LEFT_UP, DIR_RIGHT_UP, DIR_DOWN_RIGHT, DIR_DOWN_LEFT];\nexports.DIR_POSSIBLE_MOVES = DIR_POSSIBLE_MOVES;\nvar DIR_OPTIONS = {\n  w: DIR_UP,\n  a: DIR_LEFT,\n  s: DIR_DOWN,\n  d: DIR_RIGHT,\n  ArrowUp: DIR_UP,\n  ArrowLeft: DIR_LEFT,\n  ArrowRight: DIR_RIGHT,\n  ArrowDown: DIR_DOWN\n};\nexports.DIR_OPTIONS = DIR_OPTIONS;\nvar ENEMY_SIZE = UNIT * 3;\nexports.ENEMY_SIZE = ENEMY_SIZE;\nvar ENEMY_LENGTH = 44;\nexports.ENEMY_LENGTH = ENEMY_LENGTH;\nvar ENEMY_WIDTH = 25;\nexports.ENEMY_WIDTH = ENEMY_WIDTH;\nvar ENEMY_MOVE_LENGTH = 2;\nexports.ENEMY_MOVE_LENGTH = ENEMY_MOVE_LENGTH;\nvar ENEMY_SPAWN_RATE = 1000;\nexports.ENEMY_SPAWN_RATE = ENEMY_SPAWN_RATE;\nvar ENEMY_START_VEL = 1;\nexports.ENEMY_START_VEL = ENEMY_START_VEL;\nvar ENEMY_SPRITE_SCALE = 1.2;\nexports.ENEMY_SPRITE_SCALE = ENEMY_SPRITE_SCALE;\nvar ENEMY_SPRITE_SCALED_WIDTH = ENEMY_WIDTH * ENEMY_SPRITE_SCALE;\nexports.ENEMY_SPRITE_SCALED_WIDTH = ENEMY_SPRITE_SCALED_WIDTH;\nvar ENEMY_SPRITE_SCALED_LENGTH = ENEMY_LENGTH * ENEMY_SPRITE_SCALE;\nexports.ENEMY_SPRITE_SCALED_LENGTH = ENEMY_SPRITE_SCALED_LENGTH;\nvar ENEMY_SPRITE_X_POSITIONS = [11, 59, 107, 155];\nexports.ENEMY_SPRITE_X_POSITIONS = ENEMY_SPRITE_X_POSITIONS;\nvar ENEMY_SPRITE_FACING_DOWN = 18;\nexports.ENEMY_SPRITE_FACING_DOWN = ENEMY_SPRITE_FACING_DOWN;\nvar ENEMY_SPRITE_FACING_RIGHT = 147;\nexports.ENEMY_SPRITE_FACING_RIGHT = ENEMY_SPRITE_FACING_RIGHT;\nvar ENEMY_SPRITE_FACING_UP = 210;\nexports.ENEMY_SPRITE_FACING_UP = ENEMY_SPRITE_FACING_UP;\nvar ENEMY_SPRITE_FACING_LEFT = 83;\nexports.ENEMY_SPRITE_FACING_LEFT = ENEMY_SPRITE_FACING_LEFT;\nvar FRAME_LIMIT = 15;\nexports.FRAME_LIMIT = FRAME_LIMIT;\nvar HEALTH_COLOR = 'pink';\nexports.HEALTH_COLOR = HEALTH_COLOR;\nvar HEALTH_LENGTH = UNIT * 4;\nexports.HEALTH_LENGTH = HEALTH_LENGTH;\nvar HEALTH_START_X = 10;\nexports.HEALTH_START_X = HEALTH_START_X;\nvar HEALTH_START_Y = 10;\nexports.HEALTH_START_Y = HEALTH_START_Y;\nvar HERO_COLOR = 'blue';\nexports.HERO_COLOR = HERO_COLOR;\nvar HERO_DASH_KEY = 'z';\nexports.HERO_DASH_KEY = HERO_DASH_KEY;\nvar HERO_NORMAL_VEL = 1;\nexports.HERO_NORMAL_VEL = HERO_NORMAL_VEL;\nvar HERO_DASH_VEL = 3;\nexports.HERO_DASH_VEL = HERO_DASH_VEL;\nvar HERO_LENGTH = 44;\nexports.HERO_LENGTH = HERO_LENGTH;\nvar HERO_WIDTH = 25;\nexports.HERO_WIDTH = HERO_WIDTH;\nvar HERO_MOVE_LENGTH = 4;\nexports.HERO_MOVE_LENGTH = HERO_MOVE_LENGTH;\nvar HERO_START_POS = {\n  x: PLAY_AREA_START_POS,\n  y: PLAY_AREA_START_POS\n};\nexports.HERO_START_POS = HERO_START_POS;\nvar HERO_START_DIR = DIR_DOWN;\nexports.HERO_START_DIR = HERO_START_DIR;\nvar HERO_START_HEALTH = 3;\nexports.HERO_START_HEALTH = HERO_START_HEALTH;\nvar HERO_DASH_SPEED = 8;\nexports.HERO_DASH_SPEED = HERO_DASH_SPEED;\nvar HERO_DASH_TIME = 50;\nexports.HERO_DASH_TIME = HERO_DASH_TIME;\nvar HERO_SPRITE_SCALE = 1.3;\nexports.HERO_SPRITE_SCALE = HERO_SPRITE_SCALE;\nvar HERO_SPRITE_SCALED_WIDTH = HERO_WIDTH * HERO_SPRITE_SCALE;\nexports.HERO_SPRITE_SCALED_WIDTH = HERO_SPRITE_SCALED_WIDTH;\nvar HERO_SPRITE_SCALED_LENGTH = HERO_LENGTH * HERO_SPRITE_SCALE;\nexports.HERO_SPRITE_SCALED_LENGTH = HERO_SPRITE_SCALED_LENGTH;\nvar HERO_SPRITE_X_POSITIONS = [4, 51, 98, 147];\nexports.HERO_SPRITE_X_POSITIONS = HERO_SPRITE_X_POSITIONS;\nvar HERO_SPRITE_FACING_DOWN = 2;\nexports.HERO_SPRITE_FACING_DOWN = HERO_SPRITE_FACING_DOWN;\nvar HERO_SPRITE_FACING_RIGHT = 131;\nexports.HERO_SPRITE_FACING_RIGHT = HERO_SPRITE_FACING_RIGHT;\nvar HERO_SPRITE_FACING_UP = 194;\nexports.HERO_SPRITE_FACING_UP = HERO_SPRITE_FACING_UP;\nvar HERO_SPRITE_FACING_LEFT = 67;\nexports.HERO_SPRITE_FACING_LEFT = HERO_SPRITE_FACING_LEFT;\nvar WEAPON_COLOR = 'green';\nexports.WEAPON_COLOR = WEAPON_COLOR;\nvar WEAPON_LENGTH = UNIT * 20;\nexports.WEAPON_LENGTH = WEAPON_LENGTH;\nvar WEAPON_WIDTH = UNIT * 12;\nexports.WEAPON_WIDTH = WEAPON_WIDTH;\nvar WEAPON_DIST = 60;\nexports.WEAPON_DIST = WEAPON_DIST;\nvar WEAPON_DIR_HORIZONTAL = 'horizontal';\nexports.WEAPON_DIR_HORIZONTAL = WEAPON_DIR_HORIZONTAL;\nvar WEAPON_DIR_VERTICAL = 'vertical';\nexports.WEAPON_DIR_VERTICAL = WEAPON_DIR_VERTICAL;\nvar WEAPON_DIR_DIAG_LEFT = 'diag_left';\nexports.WEAPON_DIR_DIAG_LEFT = WEAPON_DIR_DIAG_LEFT;\nvar WEAPON_DIR_DIAG_RIGHT = 'diag_right';\nexports.WEAPON_DIR_DIAG_RIGHT = WEAPON_DIR_DIAG_RIGHT;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "TOGGLE_ENEMY_MOVEMENT",
        "TOGGLE_ENEMY_SPAWN",
        "TOOGGLE_DRAW_HITBOXES",
        "UNIT",
        "CANVAS_WIDTH",
        "CANVAS_LENGTH",
        "PLAY_AREA_SIDE_LENGTH",
        "PLAY_AREA_START_POS",
        "PLAY_AREA_COLOR",
        "PLAY_AREA_UP_BOUNDARY",
        "PLAY_AREA_DOWN_BOUNDARY",
        "PLAY_AREA_LEFT_BOUNDARY",
        "PLAY_AREA_RIGHT_BOUNDARY",
        "PLAY_AREA_OUTSIDE_COLOR",
        "PLAY_AREA_S_WIDTH",
        "PLAY_AREA_S_HEIGHT",
        "PLAY_AREA_SX",
        "PLAY_AREA_SY",
        "DIR_DOWN",
        "DIR_LEFT",
        "DIR_RIGHT",
        "DIR_UP",
        "DIR_LEFT_UP",
        "DIR_RIGHT_UP",
        "DIR_DOWN_RIGHT",
        "DIR_DOWN_LEFT",
        "DIR_POSSIBLE_MOVES",
        "DIR_OPTIONS",
        "w",
        "a",
        "s",
        "d",
        "ArrowUp",
        "ArrowLeft",
        "ArrowRight",
        "ArrowDown",
        "ENEMY_SIZE",
        "ENEMY_LENGTH",
        "ENEMY_WIDTH",
        "ENEMY_MOVE_LENGTH",
        "ENEMY_SPAWN_RATE",
        "ENEMY_START_VEL",
        "ENEMY_SPRITE_SCALE",
        "ENEMY_SPRITE_SCALED_WIDTH",
        "ENEMY_SPRITE_SCALED_LENGTH",
        "ENEMY_SPRITE_X_POSITIONS",
        "ENEMY_SPRITE_FACING_DOWN",
        "ENEMY_SPRITE_FACING_RIGHT",
        "ENEMY_SPRITE_FACING_UP",
        "ENEMY_SPRITE_FACING_LEFT",
        "FRAME_LIMIT",
        "HEALTH_COLOR",
        "HEALTH_LENGTH",
        "HEALTH_START_X",
        "HEALTH_START_Y",
        "HERO_COLOR",
        "HERO_DASH_KEY",
        "HERO_NORMAL_VEL",
        "HERO_DASH_VEL",
        "HERO_LENGTH",
        "HERO_WIDTH",
        "HERO_MOVE_LENGTH",
        "HERO_START_POS",
        "x",
        "y",
        "HERO_START_DIR",
        "HERO_START_HEALTH",
        "HERO_DASH_SPEED",
        "HERO_DASH_TIME",
        "HERO_SPRITE_SCALE",
        "HERO_SPRITE_SCALED_WIDTH",
        "HERO_SPRITE_SCALED_LENGTH",
        "HERO_SPRITE_X_POSITIONS",
        "HERO_SPRITE_FACING_DOWN",
        "HERO_SPRITE_FACING_RIGHT",
        "HERO_SPRITE_FACING_UP",
        "HERO_SPRITE_FACING_LEFT",
        "WEAPON_COLOR",
        "WEAPON_LENGTH",
        "WEAPON_WIDTH",
        "WEAPON_DIST",
        "WEAPON_DIR_HORIZONTAL",
        "WEAPON_DIR_VERTICAL",
        "WEAPON_DIR_DIAG_LEFT",
        "WEAPON_DIR_DIAG_RIGHT"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,qBAAqB,GAAG,IAA9B;;AACA,IAAMC,kBAAkB,GAAG,KAA3B;;AACA,IAAMC,qBAAqB,GAAG,IAA9B;;AAEA,IAAMC,IAAI,GAAG,CAAb;;AAEA,IAAMC,YAAY,GAAG,GAArB;;AACA,IAAMC,aAAa,GAAG,GAAtB;;AAEA,IAAMC,qBAAqB,GAAG,GAA9B;;AACA,IAAMC,mBAAmB,GAAG,EAA5B;;AACA,IAAMC,eAAe,GAAG,OAAxB;;AACA,IAAMC,qBAAqB,GAAG,IAAIF,mBAAlC;;AACA,IAAMG,uBAAuB,GAAG,IAAIH,mBAAJ,GAA0BD,qBAA1D;;AACA,IAAMK,uBAAuB,GAAG,IAAIJ,mBAApC;;AACA,IAAMK,wBAAwB,GAAG,IAAIL,mBAAJ,GAA0BD,qBAA3D;;AACA,IAAMO,uBAAuB,GAAG,OAAhC;;AACA,IAAMC,iBAAiB,GAAG,GAA1B;;AACA,IAAMC,kBAAkB,GAAG,GAA3B;;AACA,IAAMC,YAAY,GAAG,EAArB;;AACA,IAAMC,YAAY,GAAG,EAArB;;AAEA,IAAMC,QAAQ,GAAG,MAAjB;;AACA,IAAMC,QAAQ,GAAG,MAAjB;;AACA,IAAMC,SAAS,GAAG,OAAlB;;AACA,IAAMC,MAAM,GAAG,IAAf;;AACA,IAAMC,WAAW,GAAGH,QAAQ,GAAG,GAAX,GAAiBE,MAArC;;AACA,IAAME,YAAY,GAAGH,SAAS,GAAG,GAAZ,GAAkBC,MAAvC;;AACA,IAAMG,cAAc,GAAGN,QAAQ,GAAG,GAAX,GAAiBE,SAAxC;;AACA,IAAMK,aAAa,GAAGP,QAAQ,GAAG,GAAX,GAAiBC,QAAvC;;AACA,IAAMO,kBAAkB,GAAG,CAC9BR,QAD8B,EAE9BC,QAF8B,EAG9BE,MAH8B,EAI9BD,SAJ8B,EAK9BE,WAL8B,EAM9BC,YAN8B,EAO9BC,cAP8B,EAQ9BC,aAR8B,CAA3B;;AAWA,IAAME,WAAW,GAAG;AACvBC,EAAAA,CAAC,EAAEP,MADoB;AAEvBQ,EAAAA,CAAC,EAAEV,QAFoB;AAGvBW,EAAAA,CAAC,EAAEZ,QAHoB;AAIvBa,EAAAA,CAAC,EAAEX,SAJoB;AAKvBY,EAAAA,OAAO,EAAEX,MALc;AAMvBY,EAAAA,SAAS,EAAEd,QANY;AAOvBe,EAAAA,UAAU,EAAEd,SAPW;AAQvBe,EAAAA,SAAS,EAAEjB;AARY,CAApB;;AAWA,IAAMkB,UAAU,GAAGjC,IAAI,GAAG,CAA1B;;AACA,IAAMkC,YAAY,GAAG,EAArB;;AACA,IAAMC,WAAW,GAAG,EAApB;;AACA,IAAMC,iBAAiB,GAAG,CAA1B;;AACA,IAAMC,gBAAgB,GAAG,IAAzB;;AACA,IAAMC,eAAe,GAAG,CAAxB;;AAEA,IAAMC,kBAAkB,GAAG,GAA3B;;AACA,IAAMC,yBAAyB,GAAGL,WAAW,GAAGI,kBAAhD;;AACA,IAAME,0BAA0B,GAAGP,YAAY,GAAGK,kBAAlD;;AACA,IAAMG,wBAAwB,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,EAAc,GAAd,CAAjC;;AACA,IAAMC,wBAAwB,GAAG,EAAjC;;AACA,IAAMC,yBAAyB,GAAG,GAAlC;;AACA,IAAMC,sBAAsB,GAAG,GAA/B;;AACA,IAAMC,wBAAwB,GAAG,EAAjC;;AAEA,IAAMC,WAAW,GAAG,EAApB;;AAEA,IAAMC,YAAY,GAAG,MAArB;;AACA,IAAMC,aAAa,GAAGjD,IAAI,GAAG,CAA7B;;AACA,IAAMkD,cAAc,GAAG,EAAvB;;AACA,IAAMC,cAAc,GAAG,EAAvB;;AAEA,IAAMC,UAAU,GAAG,MAAnB;;AACA,IAAMC,aAAa,GAAG,GAAtB;;AACA,IAAMC,eAAe,GAAG,CAAxB;;AACA,IAAMC,aAAa,GAAG,CAAtB;;AACA,IAAMC,WAAW,GAAG,EAApB;;AACA,IAAMC,UAAU,GAAG,EAAnB;;AACA,IAAMC,gBAAgB,GAAG,CAAzB;;AACA,IAAMC,cAAc,GAAG;AAAEC,EAAAA,CAAC,EAAExD,mBAAL;AAA0ByD,EAAAA,CAAC,EAAEzD;AAA7B,CAAvB;;AACA,IAAM0D,cAAc,GAAG/C,QAAvB;;AACA,IAAMgD,iBAAiB,GAAG,CAA1B;;AACA,IAAMC,eAAe,GAAG,CAAxB;;AACA,IAAMC,cAAc,GAAG,EAAvB;;AAEA,IAAMC,iBAAiB,GAAG,GAA1B;;AACA,IAAMC,wBAAwB,GAAGV,UAAU,GAAGS,iBAA9C;;AACA,IAAME,yBAAyB,GAAGZ,WAAW,GAAGU,iBAAhD;;AACA,IAAMG,uBAAuB,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,GAAZ,CAAhC;;AACA,IAAMC,uBAAuB,GAAG,CAAhC;;AACA,IAAMC,wBAAwB,GAAG,GAAjC;;AACA,IAAMC,qBAAqB,GAAG,GAA9B;;AACA,IAAMC,uBAAuB,GAAG,EAAhC;;AAEA,IAAMC,YAAY,GAAG,OAArB;;AACA,IAAMC,aAAa,GAAG3E,IAAI,GAAG,EAA7B;;AACA,IAAM4E,YAAY,GAAG5E,IAAI,GAAG,EAA5B;;AACA,IAAM6E,WAAW,GAAG,EAApB;;AACA,IAAMC,qBAAqB,GAAG,YAA9B;;AACA,IAAMC,mBAAmB,GAAG,UAA5B;;AACA,IAAMC,oBAAoB,GAAG,WAA7B;;AACA,IAAMC,qBAAqB,GAAG,YAA9B",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "sourcesContent": [
        "export const TOGGLE_ENEMY_MOVEMENT = true;\nexport const TOGGLE_ENEMY_SPAWN = false;\nexport const TOOGGLE_DRAW_HITBOXES = true;\n\nexport const UNIT = 5;\n\nexport const CANVAS_WIDTH = 600\nexport const CANVAS_LENGTH = 600\n\nexport const PLAY_AREA_SIDE_LENGTH = 500;\nexport const PLAY_AREA_START_POS = 50;\nexport const PLAY_AREA_COLOR = 'black';\nexport const PLAY_AREA_UP_BOUNDARY = 0 + PLAY_AREA_START_POS;\nexport const PLAY_AREA_DOWN_BOUNDARY = 0 + PLAY_AREA_START_POS + PLAY_AREA_SIDE_LENGTH;\nexport const PLAY_AREA_LEFT_BOUNDARY = 0 + PLAY_AREA_START_POS;\nexport const PLAY_AREA_RIGHT_BOUNDARY = 0 + PLAY_AREA_START_POS + PLAY_AREA_SIDE_LENGTH;\nexport const PLAY_AREA_OUTSIDE_COLOR = 'white'\nexport const PLAY_AREA_S_WIDTH = 457\nexport const PLAY_AREA_S_HEIGHT = 415\nexport const PLAY_AREA_SX = 12\nexport const PLAY_AREA_SY = 32\n\nexport const DIR_DOWN = 'down'\nexport const DIR_LEFT = 'left'\nexport const DIR_RIGHT = 'right'\nexport const DIR_UP = 'up'\nexport const DIR_LEFT_UP = DIR_LEFT + ' ' + DIR_UP\nexport const DIR_RIGHT_UP = DIR_RIGHT + ' ' + DIR_UP\nexport const DIR_DOWN_RIGHT = DIR_DOWN + ' ' + DIR_RIGHT\nexport const DIR_DOWN_LEFT = DIR_DOWN + ' ' + DIR_LEFT\nexport const DIR_POSSIBLE_MOVES = [\n    DIR_DOWN,\n    DIR_LEFT,\n    DIR_UP,\n    DIR_RIGHT,\n    DIR_LEFT_UP,\n    DIR_RIGHT_UP,\n    DIR_DOWN_RIGHT,\n    DIR_DOWN_LEFT\n]\n\nexport const DIR_OPTIONS = {\n    w: DIR_UP,\n    a: DIR_LEFT,\n    s: DIR_DOWN,\n    d: DIR_RIGHT,\n    ArrowUp: DIR_UP,\n    ArrowLeft: DIR_LEFT,\n    ArrowRight: DIR_RIGHT,\n    ArrowDown: DIR_DOWN,\n}\n\nexport const ENEMY_SIZE = UNIT * 3\nexport const ENEMY_LENGTH = 44\nexport const ENEMY_WIDTH = 25\nexport const ENEMY_MOVE_LENGTH = 2\nexport const ENEMY_SPAWN_RATE = 1000\nexport const ENEMY_START_VEL = 1\n\nexport const ENEMY_SPRITE_SCALE = 1.2\nexport const ENEMY_SPRITE_SCALED_WIDTH = ENEMY_WIDTH * ENEMY_SPRITE_SCALE\nexport const ENEMY_SPRITE_SCALED_LENGTH = ENEMY_LENGTH * ENEMY_SPRITE_SCALE\nexport const ENEMY_SPRITE_X_POSITIONS = [11, 59, 107, 155];\nexport const ENEMY_SPRITE_FACING_DOWN = 18;\nexport const ENEMY_SPRITE_FACING_RIGHT = 147;\nexport const ENEMY_SPRITE_FACING_UP = 210;\nexport const ENEMY_SPRITE_FACING_LEFT = 83;\n\nexport const FRAME_LIMIT = 15\n\nexport const HEALTH_COLOR = 'pink'\nexport const HEALTH_LENGTH = UNIT * 4\nexport const HEALTH_START_X = 10\nexport const HEALTH_START_Y = 10\n\nexport const HERO_COLOR = 'blue';\nexport const HERO_DASH_KEY = 'z';\nexport const HERO_NORMAL_VEL = 1;\nexport const HERO_DASH_VEL = 3;\nexport const HERO_LENGTH = 44;\nexport const HERO_WIDTH = 25;\nexport const HERO_MOVE_LENGTH = 4;\nexport const HERO_START_POS = { x: PLAY_AREA_START_POS, y: PLAY_AREA_START_POS}\nexport const HERO_START_DIR = DIR_DOWN\nexport const HERO_START_HEALTH = 3\nexport const HERO_DASH_SPEED = 8\nexport const HERO_DASH_TIME = 50\n\nexport const HERO_SPRITE_SCALE = 1.3\nexport const HERO_SPRITE_SCALED_WIDTH = HERO_WIDTH * HERO_SPRITE_SCALE\nexport const HERO_SPRITE_SCALED_LENGTH = HERO_LENGTH * HERO_SPRITE_SCALE\nexport const HERO_SPRITE_X_POSITIONS = [4, 51, 98, 147];\nexport const HERO_SPRITE_FACING_DOWN = 2;\nexport const HERO_SPRITE_FACING_RIGHT = 131;\nexport const HERO_SPRITE_FACING_UP = 194;\nexport const HERO_SPRITE_FACING_LEFT = 67;\n\nexport const WEAPON_COLOR = 'green'\nexport const WEAPON_LENGTH = UNIT * 20\nexport const WEAPON_WIDTH = UNIT * 12\nexport const WEAPON_DIST = 60\nexport const WEAPON_DIR_HORIZONTAL = 'horizontal'\nexport const WEAPON_DIR_VERTICAL = 'vertical'\nexport const WEAPON_DIR_DIAG_LEFT = 'diag_left'\nexport const WEAPON_DIR_DIAG_RIGHT = 'diag_right'\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610397190818
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/src/weapon.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/src/weapon.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/src/weapon.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/src/weapon.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
        "sourceFileName": "weapon.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar C = _interopRequireWildcard(require(\"./constants\"));\n\nvar _game_object = _interopRequireDefault(require(\"./game_object\"));\n\nvar _weapon_movement = _interopRequireDefault(require(\"./weapon_movement\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Weapon = /*#__PURE__*/function (_GameObject) {\n  _inherits(Weapon, _GameObject);\n\n  var _super = _createSuper(Weapon);\n\n  function Weapon(attributes) {\n    var _this;\n\n    _classCallCheck(this, Weapon);\n\n    attributes = _objectSpread(_objectSpread({}, attributes), {}, {\n      color: C.PLAY_AREA_COLOR,\n      pos: {}\n    });\n    _this = _super.call(this, attributes);\n    _this.length = C.WEAPON_LENGTH;\n    _this.width = C.WEAPON_WIDTH;\n    _this.movement = new _weapon_movement[\"default\"]({\n      width: _this.width,\n      length: _this.length\n    });\n    _this.putAway = _this.putAway.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Weapon, [{\n    key: \"draw\",\n    value: function draw() {\n      switch (this.dir) {\n        case C.WEAPON_DIR_VERTICAL:\n          this.drawVertically();\n          break;\n\n        case C.WEAPON_DIR_HORIZONTAL:\n          this.drawHorizontally();\n          break;\n      }\n    }\n  }, {\n    key: \"drawHorizontally\",\n    value: function drawHorizontally() {\n      var length = this.length,\n          width = this.width,\n          color = this.color,\n          x = this.x,\n          y = this.y,\n          ctx = this.ctx;\n      ctx.fillStyle = color;\n      ctx.fillRect(x, y, length, width);\n    }\n  }, {\n    key: \"drawVertically\",\n    value: function drawVertically() {\n      var length = this.length,\n          width = this.width,\n          color = this.color,\n          x = this.x,\n          y = this.y,\n          ctx = this.ctx;\n      ctx.fillStyle = color;\n      ctx.fillRect(x, y, width, length);\n    }\n  }, {\n    key: \"collidedWith\",\n    value: function collidedWith(enemyPos) {\n      var enemyX = enemyPos.x;\n      var enemyY = enemyPos.y;\n      var enemyWidth = C.ENEMY_SPRITE_SCALED_WIDTH;\n      var enemyLength = C.ENEMY_SPRITE_SCALED_LENGTH;\n      var weaponWidth = this.dir === C.WEAPON_DIR_VERTICAL ? C.WEAPON_WIDTH : C.WEAPON_LENGTH;\n      var weaponLength = this.dir === C.WEAPON_DIR_VERTICAL ? C.WEAPON_LENGTH : C.WEAPON_WIDTH; // Detect if 2 rectangles have collided //Eventually pull out into collison class\n\n      return this.x < enemyX + enemyWidth && this.x + weaponWidth > enemyX && this.y < enemyY + enemyLength && this.y + weaponLength > enemyY;\n    }\n  }, {\n    key: \"takeOut\",\n    value: function takeOut(moveData) {\n      this.dir = this.movement.getNewDir(moveData.heroDir);\n\n      var _this$movement$getNew = this.movement.getNewPosUsingDir(this.dir, _objectSpread({}, moveData)),\n          newX = _this$movement$getNew.newX,\n          newY = _this$movement$getNew.newY;\n\n      this.color = C.WEAPON_COLOR;\n      this.x = newX;\n      this.y = newY;\n      setTimeout(this.putAway, 50);\n    }\n  }, {\n    key: \"putAway\",\n    value: function putAway() {\n      this.color = 'white'; // Outside of canvas color\n\n      this.x = C.CANVAS_WIDTH;\n      this.y = C.CANVAS_LENGTH;\n    }\n  }]);\n\n  return Weapon;\n}(_game_object[\"default\"]);\n\nvar _default = Weapon;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYXBvbi5qcyJdLCJuYW1lcyI6WyJXZWFwb24iLCJhdHRyaWJ1dGVzIiwiY29sb3IiLCJDIiwiUExBWV9BUkVBX0NPTE9SIiwicG9zIiwibGVuZ3RoIiwiV0VBUE9OX0xFTkdUSCIsIndpZHRoIiwiV0VBUE9OX1dJRFRIIiwibW92ZW1lbnQiLCJXZWFwb25Nb3ZlbWVudCIsInB1dEF3YXkiLCJiaW5kIiwiZGlyIiwiV0VBUE9OX0RJUl9WRVJUSUNBTCIsImRyYXdWZXJ0aWNhbGx5IiwiV0VBUE9OX0RJUl9IT1JJWk9OVEFMIiwiZHJhd0hvcml6b250YWxseSIsIngiLCJ5IiwiY3R4IiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJlbmVteVBvcyIsImVuZW15WCIsImVuZW15WSIsImVuZW15V2lkdGgiLCJFTkVNWV9TUFJJVEVfU0NBTEVEX1dJRFRIIiwiZW5lbXlMZW5ndGgiLCJFTkVNWV9TUFJJVEVfU0NBTEVEX0xFTkdUSCIsIndlYXBvbldpZHRoIiwid2VhcG9uTGVuZ3RoIiwibW92ZURhdGEiLCJnZXROZXdEaXIiLCJoZXJvRGlyIiwiZ2V0TmV3UG9zVXNpbmdEaXIiLCJuZXdYIiwibmV3WSIsIldFQVBPTl9DT0xPUiIsInNldFRpbWVvdXQiLCJDQU5WQVNfV0lEVEgiLCJDQU5WQVNfTEVOR1RIIiwiR2FtZU9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFTUEsTTs7Ozs7QUFDRixrQkFBWUMsVUFBWixFQUF1QjtBQUFBOztBQUFBOztBQUNuQkEsSUFBQUEsVUFBVSxtQ0FDSEEsVUFERztBQUVOQyxNQUFBQSxLQUFLLEVBQUVDLENBQUMsQ0FBQ0MsZUFGSDtBQUdOQyxNQUFBQSxHQUFHLEVBQUU7QUFIQyxNQUFWO0FBS0EsOEJBQU1KLFVBQU47QUFFQSxVQUFLSyxNQUFMLEdBQWNILENBQUMsQ0FBQ0ksYUFBaEI7QUFDQSxVQUFLQyxLQUFMLEdBQWFM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QixHQUFyQyxvQkFDaEJtQixRQURnQixFQUZWO0FBQUEsVUFFTEksSUFGSyx5QkFFTEEsSUFGSztBQUFBLFVBRUNDLElBRkQseUJBRUNBLElBRkQ7O0FBTWIsV0FBS3BDLEtBQUwsR0FBYUMsQ0FBQyxDQUFDb0MsWUFBZjtBQUNBLFdBQUtwQixDQUFMLEdBQVNrQixJQUFUO0FBQ0EsV0FBS2pCLENBQUwsR0FBU2tCLElBQVQ7QUFDQUUsTUFBQUEsVUFBVSxDQUFDLEtBQUs1QixPQUFOLEVBQWUsRUFBZixDQUFWO0FBQ0g7Ozs4QkFFUztBQUNOLFdBQUtWLEtBQUwsR0FBYSxPQUFiLENBRE0sQ0FDZTs7QUFDckIsV0FBS2lCLENBQUwsR0FBU2hCLENBQUMsQ0FBQ3NDLFlBQVg7QUFDQSxXQUFLckIsQ0FBTCxHQUFTakIsQ0FBQyxDQUFDdUMsYUFBWDtBQUNIOzs7O0VBN0VnQkMsdUI7O2VBZ0ZOM0MsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvamFyZWQvRGVza3RvcC9Db2RpbmcvYWN0aW9uX3JwZy9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQyBmcm9tICcuL2NvbnN0YW50cydcbmltcG9ydCBHYW1lT2JqZWN0IGZyb20gJy4vZ2FtZV9vYmplY3QnXG5pbXBvcnQgV2VhcG9uTW92ZW1lbnQgZnJvbSAnLi93ZWFwb25fbW92ZW1lbnQnXG5cbmNsYXNzIFdlYXBvbiBleHRlbmRzIEdhbWVPYmplY3Qge1xuICAgIGNvbnN0cnVjdG9yKGF0dHJpYnV0ZXMpe1xuICAgICAgICBhdHRyaWJ1dGVzID0ge1xuICAgICAgICAgICAgLi4uYXR0cmlidXRlcyxcbiAgICAgICAgICAgIGNvbG9yOiBDLlBMQVlfQVJFQV9DT0xPUixcbiAgICAgICAgICAgIHBvczoge31cbiAgICAgICAgfVxuICAgICAgICBzdXBlcihhdHRyaWJ1dGVzKVxuXG4gICAgICAgIHRoaXMubGVuZ3RoID0gQy5XRUFQT05fTEVOR1RIXG4gICAgICAgIHRoaXMud2lkdGggPSBDLldFQVBPTl9XSURUSFxuICAgICAgICB0aGlzLm1vdmVtZW50ID0gbmV3IFdlYXBvbk1vdmVtZW50KFxuICAgICAgICAgICAgeyB3aWR0aDogdGhpcy53aWR0aCwgbGVuZ3RoOiB0aGlzLmxlbmd0aCB9KVxuXG4gICAgICAgIHRoaXMucHV0QXdheSA9IHRoaXMucHV0QXdheS5iaW5kKHRoaXMpXG4gICAgfVxuXG4gICAgZHJhdygpe1xuICAgICAgICBzd2l0Y2ggKHRoaXMuZGlyKSB7XG4gICAgICAgICAgICBjYXNlIEMuV0VBUE9OX0RJUl9WRVJUSUNBTDpcbiAgICAgICAgICAgICAgICB0aGlzLmRyYXdWZXJ0aWNhbGx5KClcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgQy5XRUFQT05fRElSX0hPUklaT05UQUw6XG4gICAgICAgICAgICAgICAgdGhpcy5kcmF3SG9yaXpvbnRhbGx5KClcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRyYXdIb3Jpem9udGFsbHkoKXtcbiAgICAgICAgY29uc3QgeyBsZW5ndGgsIHdpZHRoLCBjb2xvciwgeCwgeSwgY3R4IH0gPSB0aGlzXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBjb2xvcjtcblxuICAgICAgICBjdHguZmlsbFJlY3QoeCwgeSwgbGVuZ3RoLCB3aWR0aCk7XG4gICAgfVxuXG4gICAgZHJhd1ZlcnRpY2FsbHkoKXtcbiAgICAgICAgY29uc3QgeyBsZW5ndGgsIHdpZHRoLCBjb2xvciwgeCwgeSwgY3R4IH0gPSB0aGlzXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBjb2xvcjtcblxuICAgICAgICBjdHguZmlsbFJlY3QoeCwgeSwgd2lkdGgsIGxlbmd0aCk7XG4gICAgfVxuXG4gICAgY29sbGlkZWRXaXRoKGVuZW15UG9zKSB7XG4gICAgICAgIGNvbnN0IGVuZW15WCA9IGVuZW15UG9zLnhcbiAgICAgICAgY29uc3QgZW5lbXlZID0gZW5lbXlQb3MueVxuICAgICAgICBjb25zdCBlbmVteVdpZHRoID0gQy5FTkVNWV9TUFJJVEVfU0NBTEVEX1dJRFRIXG4gICAgICAgIGNvbnN0IGVuZW15TGVuZ3RoID0gQy5FTkVNWV9TUFJJVEVfU0NBTEVEX0xFTkdUSFxuICAgICAgICBjb25zdCB3ZWFwb25XaWR0aCA9IHRoaXMuZGlyID09PSBDLldFQVBPTl9ESVJfVkVSVElDQUwgXG4gICAgICAgICAgICA/IEMuV0VBUE9OX1dJRFRIIDogQy5XRUFQT05fTEVOR1RIXG4gICAgICAgIGNvbnN0IHdlYXBvbkxlbmd0aCA9IHRoaXMuZGlyID09PSBDLldFQVBPTl9ESVJfVkVSVElDQUxcbiAgICAgICAgICAgID8gQy5XRUFQT05fTEVOR1RIIDogQy5XRUFQT05fV0lEVEhcblxuICAgICAgICAvLyBEZXRlY3QgaWYgMiByZWN0YW5nbGVzIGhhdmUgY29sbGlkZWQgLy9FdmVudHVhbGx5IHB1bGwgb3V0IGludG8gY29sbGlzb24gY2xhc3NcbiAgICAgICAgcmV0dXJuICh0aGlzLnggPCBlbmVteVggKyBlbmVteVdpZHRoICYmXG4gICAgICAgICAgICB0aGlzLnggKyB3ZWFwb25XaWR0aCA+IGVuZW15WCAmJlxuICAgICAgICAgICAgdGhpcy55IDwgZW5lbXlZICsgZW5lbXlMZW5ndGggJiZcbiAgICAgICAgICAgIHRoaXMueSArIHdlYXBvbkxlbmd0aCA+IGVuZW15WSlcbiAgICAgXG4gICAgfVxuXG4gICAgdGFrZU91dChtb3ZlRGF0YSl7XG4gICAgICAgIHRoaXMuZGlyID0gdGhpcy5tb3ZlbWVudC5nZXROZXdEaXIobW92ZURhdGEuaGVyb0RpcilcbiAgICAgICAgY29uc3QgeyBuZXdYLCBuZXdZIH0gPSB0aGlzLm1vdmVtZW50LmdldE5ld1Bvc1VzaW5nRGlyKHRoaXMuZGlyLCB7XG4gICAgICAgICAgICAuLi5tb3ZlRGF0YSxcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLmNvbG9yID0gQy5XRUFQT05fQ09MT1JcbiAgICAgICAgdGhpcy54ID0gbmV3WFxuICAgICAgICB0aGlzLnkgPSBuZXdZXG4gICAgICAgIHNldFRpbWVvdXQodGhpcy5wdXRBd2F5LCA1MClcbiAgICB9XG5cbiAgICBwdXRBd2F5KCkge1xuICAgICAgICB0aGlzLmNvbG9yID0gJ3doaXRlJyAvLyBPdXRzaWRlIG9mIGNhbnZhcyBjb2xvclxuICAgICAgICB0aGlzLnggPSBDLkNBTlZBU19XSURUSFxuICAgICAgICB0aGlzLnkgPSBDLkNBTlZBU19MRU5HVEhcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFdlYXBvbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "weapon.js"
      ],
      "names": [
        "Weapon",
        "attributes",
        "color",
        "C",
        "PLAY_AREA_COLOR",
        "pos",
        "length",
        "WEAPON_LENGTH",
        "width",
        "WEAPON_WIDTH",
        "movement",
        "WeaponMovement",
        "putAway",
        "bind",
        "dir",
        "WEAPON_DIR_VERTICAL",
        "drawVertically",
        "WEAPON_DIR_HORIZONTAL",
        "drawHorizontally",
        "x",
        "y",
        "ctx",
        "fillStyle",
        "fillRect",
        "enemyPos",
        "enemyX",
        "enemyY",
        "enemyWidth",
        "ENEMY_SPRITE_SCALED_WIDTH",
        "enemyLength",
        "ENEMY_SPRITE_SCALED_LENGTH",
        "weaponWidth",
        "weaponLength",
        "moveData",
        "getNewDir",
        "heroDir",
        "getNewPosUsingDir",
        "newX",
        "newY",
        "WEAPON_COLOR",
        "setTimeout",
        "CANVAS_WIDTH",
        "CANVAS_LENGTH",
        "GameObject"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "sourcesContent": [
        "import * as C from './constants'\nimport GameObject from './game_object'\nimport WeaponMovement from './weapon_movement'\n\nclass Weapon extends GameObject {\n    constructor(attributes){\n        attributes = {\n            ...attributes,\n            color: C.PLAY_AREA_COLOR,\n            pos: {}\n        }\n        super(attributes)\n\n        this.length = C.WEAPON_LENGTH\n        this.width = C.WEAPON_WIDTH\n        this.movement = new WeaponMovement(\n            { width: this.width, length: this.length })\n\n        this.putAway = this.putAway.bind(this)\n    }\n\n    draw(){\n        switch (this.dir) {\n            case C.WEAPON_DIR_VERTICAL:\n                this.drawVertically()\n                break;\n            case C.WEAPON_DIR_HORIZONTAL:\n                this.drawHorizontally()\n                break;\n       \n        }\n    }\n\n    drawHorizontally(){\n        const { length, width, color, x, y, ctx } = this\n        ctx.fillStyle = color;\n\n        ctx.fillRect(x, y, length, width);\n    }\n\n    drawVertically(){\n        const { length, width, color, x, y, ctx } = this\n        ctx.fillStyle = color;\n\n        ctx.fillRect(x, y, width, length);\n    }\n\n    collidedWith(enemyPos) {\n        const enemyX = enemyPos.x\n        const enemyY = enemyPos.y\n        const enemyWidth = C.ENEMY_SPRITE_SCALED_WIDTH\n        const enemyLength = C.ENEMY_SPRITE_SCALED_LENGTH\n        const weaponWidth = this.dir === C.WEAPON_DIR_VERTICAL \n            ? C.WEAPON_WIDTH : C.WEAPON_LENGTH\n        const weaponLength = this.dir === C.WEAPON_DIR_VERTICAL\n            ? C.WEAPON_LENGTH : C.WEAPON_WIDTH\n\n        // Detect if 2 rectangles have collided //Eventually pull out into collison class\n        return (this.x < enemyX + enemyWidth &&\n            this.x + weaponWidth > enemyX &&\n            this.y < enemyY + enemyLength &&\n            this.y + weaponLength > enemyY)\n     \n    }\n\n    takeOut(moveData){\n        this.dir = this.movement.getNewDir(moveData.heroDir)\n        const { newX, newY } = this.movement.getNewPosUsingDir(this.dir, {\n            ...moveData,\n        })\n\n        this.color = C.WEAPON_COLOR\n        this.x = newX\n        this.y = newY\n        setTimeout(this.putAway, 50)\n    }\n\n    putAway() {\n        this.color = 'white' // Outside of canvas color\n        this.x = C.CANVAS_WIDTH\n        this.y = C.CANVAS_LENGTH\n    }\n}\n\nexport default Weapon"
      ]
    },
    "sourceType": "script",
    "mtime": 1610237318194
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/src/health.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/src/health.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/src/health.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/src/health.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
        "sourceFileName": "health.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _game_object = _interopRequireDefault(require(\"./game_object\"));\n\nvar C = _interopRequireWildcard(require(\"./constants\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Health = /*#__PURE__*/function (_GameObject) {\n  _inherits(Health, _GameObject);\n\n  var _super = _createSuper(Health);\n\n  function Health(attributes) {\n    var _this;\n\n    _classCallCheck(this, Health);\n\n    attributes = _objectSpread(_objectSpread({}, attributes), {}, {\n      color: C.HEALTH_COLOR\n    });\n    _this = _super.call(this, attributes);\n    _this.length = C.HEALTH_LENGTH;\n    return _this;\n  }\n\n  _createClass(Health, [{\n    key: \"draw\",\n    value: function draw() {\n      var length = this.length,\n          color = this.color,\n          x = this.x,\n          y = this.y,\n          ctx = this.ctx;\n      ctx.fillStyle = color;\n      ctx.fillRect(x, y, length, length);\n    }\n  }]);\n\n  return Health;\n}(_game_object[\"default\"]);\n\nvar _default = Health;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWx0aC5qcyJdLCJuYW1lcyI6WyJIZWFsdGgiLCJhdHRyaWJ1dGVzIiwiY29sb3IiLCJDIiwiSEVBTFRIX0NPTE9SIiwibGVuZ3RoIiwiSEVBTFRIX0xFTkdUSCIsIngiLCJ5IiwiY3R4IiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJHYW1lT2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVNQSxNOzs7OztBQUNGLGtCQUFZQyxVQUFaLEVBQXVCO0FBQUE7O0FBQUE7O0FBQ25CQSxJQUFBQSxVQUFVLG1DQUNIQSxVQURHO0FBRU5DLE1BQUFBLEtBQUssRUFBRUMsQ0FBQyxDQUFDQztBQUZILE1BQVY7QUFJQSw4QkFBTUgsVUFBTjtBQUVBLFVBQUtJLE1BQUwsR0FBY0YsQ0FBQyxDQUFDRyxhQUFoQjtBQVBtQjtBQVF0Qjs7OzsyQkFFTTtBQUFBLFVBQ0tELE1BREwsR0FDa0MsSUFEbEMsQ0FDS0EsTUFETDtBQUFBLFVBQ2FILEtBRGIsR0FDa0MsSUFEbEMsQ0FDYUEsS0FEYjtBQUFBLFVBQ29CSyxDQURwQixHQUNrQyxJQURsQyxDQUNvQkEsQ0FEcEI7QUFBQSxVQUN1QkMsQ0FEdkIsR0FDa0MsSUFEbEMsQ0FDdUJBLENBRHZCO0FBQUEsVUFDMEJDLEdBRDFCLEdBQ2tDLElBRGxDLENBQzBCQSxHQUQxQjtBQUVIQSxNQUFBQSxHQUFHLENBQUNDLFNBQUosR0FBZ0JSLEtBQWhCO0FBRUFPLE1BQUFBLEdBQUcsQ0FBQ0UsUUFBSixDQUFhSixDQUFiLEVBQWdCQyxDQUFoQixFQUFtQkgsTUFBbkIsRUFBMkJBLE1BQTNCO0FBQ0g7Ozs7RUFoQmdCTyx1Qjs7ZUFtQk5aLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2phcmVkL0Rlc2t0b3AvQ29kaW5nL2FjdGlvbl9ycGcvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJy4vZ2FtZV9vYmplY3QnXG5pbXBvcnQgKiBhcyBDIGZyb20gJy4vY29uc3RhbnRzJ1xuXG5jbGFzcyBIZWFsdGggZXh0ZW5kcyBHYW1lT2JqZWN0IHtcbiAgICBjb25zdHJ1Y3RvcihhdHRyaWJ1dGVzKXtcbiAgICAgICAgYXR0cmlidXRlcyA9IHtcbiAgICAgICAgICAgIC4uLmF0dHJpYnV0ZXMsXG4gICAgICAgICAgICBjb2xvcjogQy5IRUFMVEhfQ09MT1IsXG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIoYXR0cmlidXRlcylcblxuICAgICAgICB0aGlzLmxlbmd0aCA9IEMuSEVBTFRIX0xFTkdUSFxuICAgIH1cblxuICAgIGRyYXcoKSB7XG4gICAgICAgIGNvbnN0IHsgbGVuZ3RoLCBjb2xvciwgeCwgeSwgY3R4IH0gPSB0aGlzXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBjb2xvcjtcblxuICAgICAgICBjdHguZmlsbFJlY3QoeCwgeSwgbGVuZ3RoLCBsZW5ndGgpO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSGVhbHRoIl19",
    "map": {
      "version": 3,
      "sources": [
        "health.js"
      ],
      "names": [
        "Health",
        "attributes",
        "color",
        "C",
        "HEALTH_COLOR",
        "length",
        "HEALTH_LENGTH",
        "x",
        "y",
        "ctx",
        "fillStyle",
        "fillRect",
        "GameObject"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,M;;;;;AACF,kBAAYC,UAAZ,EAAuB;AAAA;;AAAA;;AACnBA,IAAAA,UAAU,mCACHA,UADG;AAENC,MAAAA,KAAK,EAAEC,CAAC,CAACC;AAFH,MAAV;AAIA,8BAAMH,UAAN;AAEA,UAAKI,MAAL,GAAcF,CAAC,CAACG,aAAhB;AAPmB;AAQtB;;;;2BAEM;AAAA,UACKD,MADL,GACkC,IADlC,CACKA,MADL;AAAA,UACaH,KADb,GACkC,IADlC,CACaA,KADb;AAAA,UACoBK,CADpB,GACkC,IADlC,CACoBA,CADpB;AAAA,UACuBC,CADvB,GACkC,IADlC,CACuBA,CADvB;AAAA,UAC0BC,GAD1B,GACkC,IADlC,CAC0BA,GAD1B;AAEHA,MAAAA,GAAG,CAACC,SAAJ,GAAgBR,KAAhB;AAEAO,MAAAA,GAAG,CAACE,QAAJ,CAAaJ,CAAb,EAAgBC,CAAhB,EAAmBH,MAAnB,EAA2BA,MAA3B;AACH;;;;EAhBgBO,uB;;eAmBNZ,M",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "sourcesContent": [
        "import GameObject from './game_object'\nimport * as C from './constants'\n\nclass Health extends GameObject {\n    constructor(attributes){\n        attributes = {\n            ...attributes,\n            color: C.HEALTH_COLOR,\n        }\n        super(attributes)\n\n        this.length = C.HEALTH_LENGTH\n    }\n\n    draw() {\n        const { length, color, x, y, ctx } = this\n        ctx.fillStyle = color;\n\n        ctx.fillRect(x, y, length, length);\n    }\n}\n\nexport default Health"
      ]
    },
    "sourceType": "script",
    "mtime": 1610237854759
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/src/hero_movement.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/src/hero_movement.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/src/hero_movement.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/src/hero_movement.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
        "sourceFileName": "hero_movement.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar C = _interopRequireWildcard(require(\"./constants\"));\n\nvar _movement = _interopRequireDefault(require(\"./movement\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar HeroMovement = /*#__PURE__*/function (_Movement) {\n  _inherits(HeroMovement, _Movement);\n\n  var _super = _createSuper(HeroMovement);\n\n  function HeroMovement(attributes) {\n    _classCallCheck(this, HeroMovement);\n\n    return _super.call(this, attributes);\n  }\n\n  _createClass(HeroMovement, [{\n    key: \"move\",\n    value: function move(moveData) {\n      var x = moveData.x,\n          y = moveData.y,\n          dir = moveData.dir;\n\n      var _this$getNewPosUsingD = this.getNewPosUsingDir(moveData),\n          newX = _this$getNewPosUsingD.newX,\n          newY = _this$getNewPosUsingD.newY;\n\n      return this.validMove(dir, newX, newY) ? {\n        x: newX,\n        y: newY,\n        moved: x !== newX || y !== newY\n      } : {\n        x: x,\n        y: y,\n        moved: false\n      };\n    }\n  }, {\n    key: \"changeDir\",\n    value: function changeDir(keysDown, dir) {\n      var newDir = this.filterExtraKeys(Object.entries(keysDown), dir).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            val = _ref2[1];\n\n        return key;\n      }).sort().join(' ');\n      return C.DIR_POSSIBLE_MOVES.includes(newDir) ? newDir : dir;\n    } // Reverse hero's direction when receivng opposing directions\n\n  }, {\n    key: \"filterExtraKeys\",\n    value: function filterExtraKeys(newDir, dir) {\n      var filtered = newDir.filter(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            key = _ref4[0],\n            val = _ref4[1];\n\n        return val;\n      });\n      if (filtered.length === 1) return filtered;\n      if (filtered[0][0] === C.DIR_RIGHT && filtered[1][0] === C.DIR_LEFT || filtered[0][0] === C.DIR_DOWN && filtered[1][0] === C.DIR_UP) filtered = filtered[0][0] === dir ? [filtered[1]] : [filtered[0]];\n      return filtered;\n    }\n  }, {\n    key: \"getNewPosUsingDir\",\n    value: function getNewPosUsingDir(moveData) {\n      var x = moveData.x,\n          y = moveData.y,\n          dir = moveData.dir,\n          vel = moveData.vel;\n      var newX = x;\n      var newY = y;\n      var delta = C.HERO_MOVE_LENGTH * vel;\n\n      switch (dir) {\n        case C.DIR_UP:\n          newY = y - delta;\n          break;\n\n        case C.DIR_DOWN:\n          newY = y + delta;\n          break;\n\n        case C.DIR_LEFT:\n          newX = x - delta;\n          break;\n\n        case C.DIR_RIGHT:\n          newX = x + delta;\n          break;\n\n        case C.DIR_LEFT_UP:\n          newX = x - delta;\n          newY = y - delta;\n          break;\n\n        case C.DIR_RIGHT_UP:\n          newX = x + delta;\n          newY = y - delta;\n          break;\n\n        case C.DIR_DOWN_LEFT:\n          newX = x - delta;\n          newY = y + delta;\n          break;\n\n        case C.DIR_DOWN_RIGHT:\n          newX = x + delta;\n          newY = y + delta;\n          break;\n      }\n\n      return {\n        newX: newX,\n        newY: newY\n      };\n    }\n  }]);\n\n  return HeroMovement;\n}(_movement[\"default\"]);\n\nvar _default = HeroMovement;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlcm9fbW92ZW1lbnQuanMiXSwibmFtZXMiOlsiSGVyb01vdmVtZW50IiwiYXR0cmlidXRlcyIsIm1vdmVEYXRhIiwieCIsInkiLCJkaXIiLCJnZXROZXdQb3NVc2luZ0RpciIsIm5ld1giLCJuZXdZIiwidmFsaWRNb3ZlIiwibW92ZWQiLCJrZXlzRG93biIsIm5ld0RpciIsImZpbHRlckV4dHJhS2V5cyIsIk9iamVjdCIsImVudHJpZXMiLCJtYXAiLCJrZXkiLCJ2YWwiLCJzb3J0Iiwiam9pbiIsIkMiLCJESVJfUE9TU0lCTEVfTU9WRVMiLCJpbmNsdWRlcyIsImZpbHRlcmVkIiwiZmlsdGVyIiwibGVuZ3RoIiwiRElSX1JJR0hUIiwiRElSX0xFRlQiLCJESVJfRE9XTiIsIkRJUl9VUCIsInZlbCIsImRlbHRhIiwiSEVST19NT1ZFX0xFTkdUSCIsIkRJUl9MRUZUX1VQIiwiRElSX1JJR0hUX1VQIiwiRElSX0RPV05fTEVGVCIsIkRJUl9ET1dOX1JJR0hUIiwiTW92ZW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLFk7Ozs7O0FBQ0Ysd0JBQVlDLFVBQVosRUFBdUI7QUFBQTs7QUFBQSw2QkFDYkEsVUFEYTtBQUV0Qjs7Ozt5QkFFSUMsUSxFQUFVO0FBQUEsVUFDSEMsQ0FERyxHQUNXRCxRQURYLENBQ0hDLENBREc7QUFBQSxVQUNBQyxDQURBLEdBQ1dGLFFBRFgsQ0FDQUUsQ0FEQTtBQUFBLFVBQ0dDLEdBREgsR0FDV0gsUUFEWCxDQUNHRyxHQURIOztBQUFBLGtDQUVZLEtBQUtDLGlCQUFMLENBQXVCSixRQUF2QixDQUZaO0FBQUEsVUFFSEssSUFGRyx5QkFFSEEsSUFGRztBQUFBLFVBRUdDLElBRkgseUJBRUdBLElBRkg7O0FBSVgsYUFBTyxLQUFLQyxTQUFMLENBQWVKLEdBQWYsRUFBb0JFLElBQXBCLEVBQTBCQyxJQUExQixJQUNEO0FBQUVMLFFB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RzZCLEtBQVg7QUFDQXhCLFVBQUFBLElBQUksR0FBR0osQ0FBQyxHQUFHNEIsS0FBWDtBQUNBOztBQUNKLGFBQUtYLENBQUMsQ0FBQ2MsWUFBUDtBQUNJNUIsVUFBQUEsSUFBSSxHQUFHSixDQUFDLEdBQUc2QixLQUFYO0FBQ0F4QixVQUFBQSxJQUFJLEdBQUdKLENBQUMsR0FBRzRCLEtBQVg7QUFDQTs7QUFDSixhQUFLWCxDQUFDLENBQUNlLGFBQVA7QUFDSTdCLFVBQUFBLElBQUksR0FBR0osQ0FBQyxHQUFHNkIsS0FBWDtBQUNBeEIsVUFBQUEsSUFBSSxHQUFHSixDQUFDLEdBQUc0QixLQUFYO0FBQ0E7O0FBQ0osYUFBS1gsQ0FBQyxDQUFDZ0IsY0FBUDtBQUNJOUIsVUFBQUEsSUFBSSxHQUFHSixDQUFDLEdBQUc2QixLQUFYO0FBQ0F4QixVQUFBQSxJQUFJLEdBQUdKLENBQUMsR0FBRzRCLEtBQVg7QUFDQTtBQTVCUjs7QUE4QkEsYUFBUTtBQUFFekIsUUFBQUEsSUFBSSxFQUFKQSxJQUFGO0FBQVFDLFFBQUFBLElBQUksRUFBSkE7QUFBUixPQUFSO0FBQ0g7Ozs7RUF4RXNCOEIsb0I7O2VBMkVadEMsWSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvamFyZWQvRGVza3RvcC9Db2RpbmcvYWN0aW9uX3JwZy9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQyBmcm9tICcuL2NvbnN0YW50cydcbmltcG9ydCBNb3ZlbWVudCBmcm9tICcuL21vdmVtZW50J1xuXG5jbGFzcyBIZXJvTW92ZW1lbnQgZXh0ZW5kcyBNb3ZlbWVudCB7XG4gICAgY29uc3RydWN0b3IoYXR0cmlidXRlcyl7XG4gICAgICAgIHN1cGVyKGF0dHJpYnV0ZXMpXG4gICAgfVxuICAgIFxuICAgIG1vdmUobW92ZURhdGEpIHtcbiAgICAgICAgY29uc3QgeyB4LCB5LCBkaXIgfSA9IG1vdmVEYXRhO1xuICAgICAgICBjb25zdCB7IG5ld1gsIG5ld1kgfSA9IHRoaXMuZ2V0TmV3UG9zVXNpbmdEaXIobW92ZURhdGEpXG5cbiAgICAgICAgcmV0dXJuIHRoaXMudmFsaWRNb3ZlKGRpciwgbmV3WCwgbmV3WSlcbiAgICAgICAgICAgID8geyB4OiBuZXdYLCB5OiBuZXdZLCBtb3ZlZDogKHggIT09IG5ld1ggfHwgeSAhPT0gbmV3WSkgfVxuICAgICAgICAgICAgOiB7IHgsIHksIG1vdmVkOiBmYWxzZSB9XG4gICAgfVxuXG4gICAgY2hhbmdlRGlyKGtleXNEb3duLCBkaXIpIHtcbiAgICAgICAgbGV0IG5ld0RpciA9IHRoaXMuZmlsdGVyRXh0cmFLZXlzKE9iamVjdC5lbnRyaWVzKGtleXNEb3duKSwgZGlyKVxuICAgICAgICAgICAgLm1hcCgoW2tleSwgdmFsXSkgPT4ga2V5KVxuICAgICAgICAgICAgLnNvcnQoKVxuICAgICAgICAgICAgLmpvaW4oJyAnKTtcblxuICAgICAgICByZXR1cm4gQy5ESVJfUE9TU0lCTEVfTU9WRVMuaW5jbHVkZXMobmV3RGlyKSA/IG5ld0RpciA6IGRpcjtcbiAgICB9XG5cbiAgICAvLyBSZXZlcnNlIGhlcm8ncyBkaXJlY3Rpb24gd2hlbiByZWNlaXZuZyBvcHBvc2luZyBkaXJlY3Rpb25zXG4gICAgZmlsdGVyRXh0cmFLZXlzKG5ld0RpciwgZGlyKSB7XG4gICAgICAgIGxldCBmaWx0ZXJlZCA9IG5ld0Rpci5maWx0ZXIoKFtrZXksIHZhbF0pID0+IHZhbClcbiAgICAgICAgaWYgKGZpbHRlcmVkLmxlbmd0aCA9PT0gMSkgcmV0dXJuIGZpbHRlcmVkXG5cbiAgICAgICAgaWYgKGZpbHRlcmVkWzBdWzBdID09PSBDLkRJUl9SSUdIVCAmJiBmaWx0ZXJlZFsxXVswXSA9PT0gQy5ESVJfTEVGVFxuICAgICAgICAgICAgfHwgZmlsdGVyZWRbMF1bMF0gPT09IEMuRElSX0RPV04gJiYgZmlsdGVyZWRbMV1bMF0gPT09IEMuRElSX1VQKSBcbiAgICAgICAgICAgICAgICBmaWx0ZXJlZCA9IGZpbHRlcmVkWzBdWzBdID09PSBkaXIgPyBbZmlsdGVyZWRbMV1dIDogW2ZpbHRlcmVkWzBdXVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZpbHRlcmVkXG4gICAgfVxuXG4gICAgZ2V0TmV3UG9zVXNpbmdEaXIobW92ZURhdGEpIHtcbiAgICAgICAgY29uc3QgeyB4LCB5LCBkaXIsIHZlbCB9ID0gbW92ZURhdGFcbiAgICAgICAgbGV0IG5ld1ggPSB4XG4gICAgICAgIGxldCBuZXdZID0geVxuICAgICAgICBsZXQgZGVsdGEgPSBDLkhFUk9fTU9WRV9MRU5HVEggKiB2ZWxcblxuICAgICAgICBzd2l0Y2ggKGRpcikge1xuICAgICAgICAgICAgY2FzZSBDLkRJUl9VUDpcbiAgICAgICAgICAgICAgICBuZXdZID0geSAtIGRlbHRhXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEMuRElSX0RPV046XG4gICAgICAgICAgICAgICAgbmV3WSA9IHkgKyBkZWx0YVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBDLkRJUl9MRUZUOlxuICAgICAgICAgICAgICAgIG5ld1ggPSB4IC0gZGVsdGFcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgQy5ESVJfUklHSFQ6XG4gICAgICAgICAgICAgICAgbmV3WCA9IHggKyBkZWx0YVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBDLkRJUl9MRUZUX1VQOlxuICAgICAgICAgICAgICAgIG5ld1ggPSB4IC0gZGVsdGFcbiAgICAgICAgICAgICAgICBuZXdZID0geSAtIGRlbHRhXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEMuRElSX1JJR0hUX1VQOlxuICAgICAgICAgICAgICAgIG5ld1ggPSB4ICsgZGVsdGFcbiAgICAgICAgICAgICAgICBuZXdZID0geSAtIGRlbHRhXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEMuRElSX0RPV05fTEVGVDpcbiAgICAgICAgICAgICAgICBuZXdYID0geCAtIGRlbHRhXG4gICAgICAgICAgICAgICAgbmV3WSA9IHkgKyBkZWx0YVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBDLkRJUl9ET1dOX1JJR0hUOlxuICAgICAgICAgICAgICAgIG5ld1ggPSB4ICsgZGVsdGFcbiAgICAgICAgICAgICAgICBuZXdZID0geSArIGRlbHRhXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICh7IG5ld1gsIG5ld1kgfSlcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEhlcm9Nb3ZlbWVudFxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "hero_movement.js"
      ],
      "names": [
        "HeroMovement",
        "attributes",
        "moveData",
        "x",
        "y",
        "dir",
        "getNewPosUsingDir",
        "newX",
        "newY",
        "validMove",
        "moved",
        "keysDown",
        "newDir",
        "filterExtraKeys",
        "Object",
        "entries",
        "map",
        "key",
        "val",
        "sort",
        "join",
        "C",
        "DIR_POSSIBLE_MOVES",
        "includes",
        "filtered",
        "filter",
        "length",
        "DIR_RIGHT",
        "DIR_LEFT",
        "DIR_DOWN",
        "DIR_UP",
        "vel",
        "delta",
        "HERO_MOVE_LENGTH",
        "DIR_LEFT_UP",
        "DIR_RIGHT_UP",
        "DIR_DOWN_LEFT",
        "DIR_DOWN_RIGHT",
        "Movement"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "sourcesContent": [
        "import * as C from './constants'\nimport Movement from './movement'\n\nclass HeroMovement extends Movement {\n    constructor(attributes){\n        super(attributes)\n    }\n    \n    move(moveData) {\n        const { x, y, dir } = moveData;\n        const { newX, newY } = this.getNewPosUsingDir(moveData)\n\n        return this.validMove(dir, newX, newY)\n            ? { x: newX, y: newY, moved: (x !== newX || y !== newY) }\n            : { x, y, moved: false }\n    }\n\n    changeDir(keysDown, dir) {\n        let newDir = this.filterExtraKeys(Object.entries(keysDown), dir)\n            .map(([key, val]) => key)\n            .sort()\n            .join(' ');\n\n        return C.DIR_POSSIBLE_MOVES.includes(newDir) ? newDir : dir;\n    }\n\n    // Reverse hero's direction when receivng opposing directions\n    filterExtraKeys(newDir, dir) {\n        let filtered = newDir.filter(([key, val]) => val)\n        if (filtered.length === 1) return filtered\n\n        if (filtered[0][0] === C.DIR_RIGHT && filtered[1][0] === C.DIR_LEFT\n            || filtered[0][0] === C.DIR_DOWN && filtered[1][0] === C.DIR_UP) \n                filtered = filtered[0][0] === dir ? [filtered[1]] : [filtered[0]]\n\n                return filtered\n    }\n\n    getNewPosUsingDir(moveData) {\n        const { x, y, dir, vel } = moveData\n        let newX = x\n        let newY = y\n        let delta = C.HERO_MOVE_LENGTH * vel\n\n        switch (dir) {\n            case C.DIR_UP:\n                newY = y - delta\n                break;\n            case C.DIR_DOWN:\n                newY = y + delta\n                break;\n            case C.DIR_LEFT:\n                newX = x - delta\n                break;\n            case C.DIR_RIGHT:\n                newX = x + delta\n                break;\n            case C.DIR_LEFT_UP:\n                newX = x - delta\n                newY = y - delta\n                break;\n            case C.DIR_RIGHT_UP:\n                newX = x + delta\n                newY = y - delta\n                break;\n            case C.DIR_DOWN_LEFT:\n                newX = x - delta\n                newY = y + delta\n                break;\n            case C.DIR_DOWN_RIGHT:\n                newX = x + delta\n                newY = y + delta\n                break;\n        }\n        return ({ newX, newY })\n    }\n}\n\nexport default HeroMovement\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610400948162
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/src/movement.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/src/movement.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/src/movement.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/src/movement.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
        "sourceFileName": "movement.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar C = _interopRequireWildcard(require(\"./constants\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Movement = /*#__PURE__*/function () {\n  function Movement(_ref) {\n    var width = _ref.width,\n        length = _ref.length;\n\n    _classCallCheck(this, Movement);\n\n    this.width = width;\n    this.length = length;\n  }\n\n  _createClass(Movement, [{\n    key: \"isInCanvas\",\n    value: function isInCanvas(_ref2) {\n      var x = _ref2.x,\n          y = _ref2.y;\n      var width = this.width,\n          length = this.length;\n      return x > C.PLAY_AREA_LEFT_BOUNDARY && x < C.PLAY_AREA_RIGHT_BOUNDARY - width && y > C.PLAY_AREA_UP_BOUNDARY && y < C.PLAY_AREA_DOWN_BOUNDARY - length;\n    }\n  }, {\n    key: \"validMove\",\n    value: function validMove(dir, newX, newY) {\n      var _this = this;\n\n      return dir.split(\" \").every(function (dir) {\n        return dir === 'up' || dir === 'down' ? _this.validYMove(dir, newY) : _this.validXMove(dir, newX);\n      });\n    }\n  }, {\n    key: \"validXMove\",\n    value: function validXMove(dir, newX) {\n      return dir === 'left' ? newX >= C.PLAY_AREA_LEFT_BOUNDARY : newX <= C.PLAY_AREA_RIGHT_BOUNDARY - this.width;\n    }\n  }, {\n    key: \"validYMove\",\n    value: function validYMove(dir, newY) {\n      return dir === 'up' ? newY >= C.PLAY_AREA_UP_BOUNDARY : newY <= C.PLAY_AREA_DOWN_BOUNDARY - this.length;\n    }\n  }]);\n\n  return Movement;\n}();\n\nvar _default = Movement;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmVtZW50LmpzIl0sIm5hbWVzIjpbIk1vdmVtZW50Iiwid2lkdGgiLCJsZW5ndGgiLCJ4IiwieSIsIkMiLCJQTEFZX0FSRUFfTEVGVF9CT1VOREFSWSIsIlBMQVlfQVJFQV9SSUdIVF9CT1VOREFSWSIsIlBMQVlfQVJFQV9VUF9CT1VOREFSWSIsIlBMQVlfQVJFQV9ET1dOX0JPVU5EQVJZIiwiZGlyIiwibmV3WCIsIm5ld1kiLCJzcGxpdCIsImV2ZXJ5IiwidmFsaWRZTW92ZSIsInZhbGlkWE1vdmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7SUFFTUEsUTtBQUNGLDBCQUE0QjtBQUFBLFFBQWZDLEtBQWUsUUFBZkEsS0FBZTtBQUFBLFFBQVJDLE1BQVEsUUFBUkEsTUFBUTs7QUFBQTs7QUFDeEIsU0FBS0QsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsU0FBS0MsTUFBTCxHQUFjQSxNQUFkO0FBRUg7Ozs7c0NBRWtCO0FBQUEsVUFBUEMsQ0FBTyxTQUFQQSxDQUFPO0FBQUEsVUFBSkMsQ0FBSSxTQUFKQSxDQUFJO0FBQUEsVUFDUEgsS0FETyxHQUNXLElBRFgsQ0FDUEEsS0FETztBQUFBLFVBQ0FDLE1BREEsR0FDVyxJQURYLENBQ0FBLE1BREE7QUFFZixhQUNJQyxDQUFDLEdBQUdFLENBQUMsQ0FBQ0MsdUJBQU4sSUFDR0gsQ0FBQyxHQUFHRSxDQUFDLENBQUNFLHdCQUFGLEdBQTZCTixLQURwQyxJQUVHRyxDQUFDLEdBQUdDLENBQUMsQ0FBQ0cscUJBRlQsSUFHR0osQ0FBQyxHQUFHQyxDQUFDLENBQUNJLHVCQUFGLEdBQTRCUCxNQUp2QztBQU1IOzs7OEJBRVNRLEcsRUFBS0MsSSxFQUFNQyxJLEVBQU07QUFBQTs7QUFDdkIsYUFBT0YsR0FBRyxDQUFDRyxLQUFKLENBQVUsR0FBVixFQUFlQyxLQUFmLENBQXFCLFVBQUFKLEdBQUcsRUFBSTtBQUMvQixlQUFRQSxHQUFHLEtBQUssSUFBUixJQUFnQkEsR0FBRyxLQUFLLE1BQXpCLEdBQ0QsS0FBSSxDQUFDSyxVQUFMLENBQWdCTCxHQUFoQixFQUFxQkUsSUFBckIsQ0FEQyxHQUVELEtBQUksQ0FBQ0ksVUFBTCxDQUFnQk4sR0FBaEIsRUFBcUJDLElBQXJCLENBRk47QUFHSCxPQUpNLENBQVA7QUFLSDs7OytCQUVVRCxHLEVBQUtDLEksRUFBTTtBQUNsQixhQUFPRCxHQUFHLEtBQUssTUFBUixHQUNEQyxJQUFJLElBQUlOLENBQUMsQ0FBQ0MsdUJBRFQsR0FFREssSUFBSSxJQUFJTixDQUFDLENBQUNFLHdCQUFGLEdBQTZCLEtBQUtOLEtBRmhEO0FBR0g7OzsrQkFFVVMsRyxFQUFLRSxJLEVBQU07QUFDbEIsYUFBT0YsR0FBRyxLQUFLLElBQVIsR0FDREUsSUFBSSxJQUFJUCxDQUFDLENBQUNHLHFCQURULEdBRURJLElBQUksSUFBSVAsQ0FBQyxDQUFDSSx1QkFBRixHQUE0QixLQUFLUCxNQUYvQztBQUdIOzs7Ozs7ZUFHVUYsUSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvamFyZWQvRGVza3RvcC9Db2RpbmcvYWN0aW9uX3JwZy9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQyBmcm9tICcuL2NvbnN0YW50cydcblxuY2xhc3MgTW92ZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKHt3aWR0aCwgbGVuZ3RofSl7XG4gICAgICAgIHRoaXMud2lkdGggPSB3aWR0aFxuICAgICAgICB0aGlzLmxlbmd0aCA9IGxlbmd0aFxuXG4gICAgfVxuXG4gICAgaXNJbkNhbnZhcyh7eCwgeX0pIHtcbiAgICAgICAgY29uc3QgeyB3aWR0aCwgbGVuZ3RoIH0gPSB0aGlzO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgeCA+IEMuUExBWV9BUkVBX0xFRlRfQk9VTkRBUllcbiAgICAgICAgICAgICYmIHggPCBDLlBMQVlfQVJFQV9SSUdIVF9CT1VOREFSWSAtIHdpZHRoXG4gICAgICAgICAgICAmJiB5ID4gQy5QTEFZX0FSRUFfVVBfQk9VTkRBUllcbiAgICAgICAgICAgICYmIHkgPCBDLlBMQVlfQVJFQV9ET1dOX0JPVU5EQVJZIC0gbGVuZ3RoXG4gICAgICAgIClcbiAgICB9XG5cbiAgICB2YWxpZE1vdmUoZGlyLCBuZXdYLCBuZXdZKSB7XG4gICAgICAgIHJldHVybiBkaXIuc3BsaXQoXCIgXCIpLmV2ZXJ5KGRpciA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKGRpciA9PT0gJ3VwJyB8fCBkaXIgPT09ICdkb3duJylcbiAgICAgICAgICAgICAgICA/IHRoaXMudmFsaWRZTW92ZShkaXIsIG5ld1kpXG4gICAgICAgICAgICAgICAgOiB0aGlzLnZhbGlkWE1vdmUoZGlyLCBuZXdYKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHZhbGlkWE1vdmUoZGlyLCBuZXdYKSB7XG4gICAgICAgIHJldHVybiBkaXIgPT09ICdsZWZ0J1xuICAgICAgICAgICAgPyBuZXdYID49IEMuUExBWV9BUkVBX0xFRlRfQk9VTkRBUllcbiAgICAgICAgICAgIDogbmV3WCA8PSBDLlBMQVlfQVJFQV9SSUdIVF9CT1VOREFSWSAtIHRoaXMud2lkdGhcbiAgICB9XG5cbiAgICB2YWxpZFlNb3ZlKGRpciwgbmV3WSkge1xuICAgICAgICByZXR1cm4gZGlyID09PSAndXAnXG4gICAgICAgICAgICA/IG5ld1kgPj0gQy5QTEFZX0FSRUFfVVBfQk9VTkRBUllcbiAgICAgICAgICAgIDogbmV3WSA8PSBDLlBMQVlfQVJFQV9ET1dOX0JPVU5EQVJZIC0gdGhpcy5sZW5ndGhcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1vdmVtZW50Il19",
    "map": {
      "version": 3,
      "sources": [
        "movement.js"
      ],
      "names": [
        "Movement",
        "width",
        "length",
        "x",
        "y",
        "C",
        "PLAY_AREA_LEFT_BOUNDARY",
        "PLAY_AREA_RIGHT_BOUNDARY",
        "PLAY_AREA_UP_BOUNDARY",
        "PLAY_AREA_DOWN_BOUNDARY",
        "dir",
        "newX",
        "newY",
        "split",
        "every",
        "validYMove",
        "validXMove"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;;;;;;;;;IAEMA,Q;AACF,0BAA4B;AAAA,QAAfC,KAAe,QAAfA,KAAe;AAAA,QAARC,MAAQ,QAARA,MAAQ;;AAAA;;AACxB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AAEH;;;;sCAEkB;AAAA,UAAPC,CAAO,SAAPA,CAAO;AAAA,UAAJC,CAAI,SAAJA,CAAI;AAAA,UACPH,KADO,GACW,IADX,CACPA,KADO;AAAA,UACAC,MADA,GACW,IADX,CACAA,MADA;AAEf,aACIC,CAAC,GAAGE,CAAC,CAACC,uBAAN,IACGH,CAAC,GAAGE,CAAC,CAACE,wBAAF,GAA6BN,KADpC,IAEGG,CAAC,GAAGC,CAAC,CAACG,qBAFT,IAGGJ,CAAC,GAAGC,CAAC,CAACI,uBAAF,GAA4BP,MAJvC;AAMH;;;8BAESQ,G,EAAKC,I,EAAMC,I,EAAM;AAAA;;AACvB,aAAOF,GAAG,CAACG,KAAJ,CAAU,GAAV,EAAeC,KAAf,CAAqB,UAAAJ,GAAG,EAAI;AAC/B,eAAQA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,MAAzB,GACD,KAAI,CAACK,UAAL,CAAgBL,GAAhB,EAAqBE,IAArB,CADC,GAED,KAAI,CAACI,UAAL,CAAgBN,GAAhB,EAAqBC,IAArB,CAFN;AAGH,OAJM,CAAP;AAKH;;;+BAEUD,G,EAAKC,I,EAAM;AAClB,aAAOD,GAAG,KAAK,MAAR,GACDC,IAAI,IAAIN,CAAC,CAACC,uBADT,GAEDK,IAAI,IAAIN,CAAC,CAACE,wBAAF,GAA6B,KAAKN,KAFhD;AAGH;;;+BAEUS,G,EAAKE,I,EAAM;AAClB,aAAOF,GAAG,KAAK,IAAR,GACDE,IAAI,IAAIP,CAAC,CAACG,qBADT,GAEDI,IAAI,IAAIP,CAAC,CAACI,uBAAF,GAA4B,KAAKP,MAF/C;AAGH;;;;;;eAGUF,Q",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "sourcesContent": [
        "import * as C from './constants'\n\nclass Movement {\n    constructor({width, length}){\n        this.width = width\n        this.length = length\n\n    }\n\n    isInCanvas({x, y}) {\n        const { width, length } = this;\n        return (\n            x > C.PLAY_AREA_LEFT_BOUNDARY\n            && x < C.PLAY_AREA_RIGHT_BOUNDARY - width\n            && y > C.PLAY_AREA_UP_BOUNDARY\n            && y < C.PLAY_AREA_DOWN_BOUNDARY - length\n        )\n    }\n\n    validMove(dir, newX, newY) {\n        return dir.split(\" \").every(dir => {\n            return (dir === 'up' || dir === 'down')\n                ? this.validYMove(dir, newY)\n                : this.validXMove(dir, newX)\n        })\n    }\n\n    validXMove(dir, newX) {\n        return dir === 'left'\n            ? newX >= C.PLAY_AREA_LEFT_BOUNDARY\n            : newX <= C.PLAY_AREA_RIGHT_BOUNDARY - this.width\n    }\n\n    validYMove(dir, newY) {\n        return dir === 'up'\n            ? newY >= C.PLAY_AREA_UP_BOUNDARY\n            : newY <= C.PLAY_AREA_DOWN_BOUNDARY - this.length\n    }\n}\n\nexport default Movement"
      ]
    },
    "sourceType": "script",
    "mtime": 1610398249292
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/test/health_test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/test/health_test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/test/health_test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/test/health_test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
        "sourceFileName": "health_test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar chai = _interopRequireWildcard(require(\"chai\"));\n\nvar C = _interopRequireWildcard(require(\"../src/constants\"));\n\nvar _health = _interopRequireDefault(require(\"../src/health\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// import assert from 'assert';\nvar should = chai.should();\nvar expect = chai.expect;\ndescribe('Health Object Tests', function () {\n  var attributes = {\n    pos: {\n      x: 5,\n      y: 10\n    }\n  };\n  var healthObject = new _health[\"default\"](attributes);\n  var possibleHealthObjectKeys = ['x', 'y', 'ctx', 'vel', 'color', 'length'];\n  var myObjKeys = Object.keys(healthObject);\n  it('should create an object with only the given attributes and defaults', function () {\n    healthObject.should.have.property('x').equal(5);\n    healthObject.should.have.property('y').equal(10);\n    healthObject.should.have.property('length').equal(C.HEALTH_LENGTH);\n    healthObject.should.have.property('color').equal(C.HEALTH_COLOR);\n    healthObject.should.not.have.property('vel');\n    expect(possibleHealthObjectKeys).to.include.members(myObjKeys);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWx0aF90ZXN0LmpzIl0sIm5hbWVzIjpbInNob3VsZCIsImNoYWkiLCJleHBlY3QiLCJkZXNjcmliZSIsImF0dHJpYnV0ZXMiLCJwb3MiLCJ4IiwieSIsImhlYWx0aE9iamVjdCIsIkhlYWx0aCIsInBvc3NpYmxlSGVhbHRoT2JqZWN0S2V5cyIsIm15T2JqS2V5cyIsIk9iamVjdCIsImtleXMiLCJpdCIsImhhdmUiLCJwcm9wZXJ0eSIsImVxdWFsIiwiQyIsIkhFQUxUSF9MRU5HVEgiLCJIRUFMVEhfQ09MT1IiLCJub3QiLCJ0byIsImluY2x1ZGUiLCJtZW1iZXJzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBSEE7QUFLQSxJQUFJQSxNQUFNLEdBQUdDLElBQUksQ0FBQ0QsTUFBTCxFQUFiO0FBQ0EsSUFBSUUsTUFBTSxHQUFHRCxJQUFJLENBQUNDLE1BQWxCO0FBR0FDLFFBQVEsQ0FBQyxxQkFBRCxFQUF3QixZQUFNO0FBQ2xDLE1BQU1DLFVBQVUsR0FBRztBQUNmQyxJQUFBQSxHQUFHLEVBQUU7QUFBRUMsTUFBQUEsQ0FBQyxFQUFFLENBQUw7QUFBUUMsTUFBQUEsQ0FBQyxFQUFFO0FBQVg7QUFEVSxHQUFuQjtBQUdBLE1BQUlDLFlBQVksR0FBRyxJQUFJQyxrQkFBSixDQUFXTCxVQUFYLENBQW5CO0FBQ0EsTUFBTU0sd0JBQXdCLEdBQUcsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEtBQVgsRUFBa0IsS0FBbEIsRUFBeUIsT0FBekIsRUFBa0MsUUFBbEMsQ0FBakM7QUFDQSxNQUFNQyxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZTCxZQUFaLENBQWxCO0FBRUFNLEVBQUFBLEVBQUUsQ0FBQyxxRUFBRCxFQUF3RSxZQUFNO0FBQzVFTixJQUFBQSxZQUFZLENBQUNSLE1BQWIsQ0FBb0JlLElBQXBCLENBQXlCQyxRQUF6QixDQUFrQyxHQUFsQyxFQUF1Q0MsS0FBdkMsQ0FBNkMsQ0FBN0M7QUFDQVQsSUFBQUEsWUFBWSxDQUFDUixNQUFiLENBQW9CZSxJQUFwQixDQUF5QkMsUUFBekIsQ0FBa0MsR0FBbEMsRUFBdUNDLEtBQXZDLENBQTZDLEVBQTdDO0FBQ0FULElBQUFBLFlBQVksQ0FBQ1IsTUFBYixDQUFvQmUsSUFBcEIsQ0FBeUJDLFFBQXpCLENBQWtDLFFBQWxDLEVBQTRDQyxLQUE1QyxDQUFrREMsQ0FBQyxDQUFDQyxhQUFwRDtBQUNBWCxJQUFBQSxZQUFZLENBQUNSLE1BQWIsQ0FBb0JlLElBQXBCLENBQXlCQyxRQUF6QixDQUFrQyxPQUFsQyxFQUEyQ0MsS0FBM0MsQ0FBaURDLENBQUMsQ0FBQ0UsWUFBbkQ7QUFFQVosSUFBQUEsWUFBWSxDQUFDUixNQUFiLENBQW9CcUIsR0FBcEIsQ0FBd0JOLElBQXhCLENBQTZCQyxRQUE3QixDQUFzQyxLQUF0QztBQUVBZCxJQUFBQSxNQUFNLENBQUNRLHdCQUFELENBQU4sQ0FBaUNZLEVBQWpDLENBQW9DQyxPQUFwQyxDQUE0Q0MsT0FBNUMsQ0FBb0RiLFNBQXBEO0FBQ0gsR0FUQyxDQUFGO0FBVUgsQ0FsQk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvamFyZWQvRGVza3RvcC9Db2RpbmcvYWN0aW9uX3JwZy90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcbmltcG9ydCAqIGFzIGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgKiBhcyBDIGZyb20gJy4uL3NyYy9jb25zdGFudHMnXG5pbXBvcnQgSGVhbHRoIGZyb20gJy4uL3NyYy9oZWFsdGgnXG5cbmxldCBzaG91bGQgPSBjaGFpLnNob3VsZCgpO1xubGV0IGV4cGVjdCA9IGNoYWkuZXhwZWN0O1xuXG5cbmRlc2NyaWJlKCdIZWFsdGggT2JqZWN0IFRlc3RzJywgKCkgPT4ge1xuICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7XG4gICAgICAgIHBvczogeyB4OiA1LCB5OiAxMCwgfSxcbiAgICB9XG4gICAgbGV0IGhlYWx0aE9iamVjdCA9IG5ldyBIZWFsdGgoYXR0cmlidXRlcylcbiAgICBjb25zdCBwb3NzaWJsZUhlYWx0aE9iamVjdEtleXMgPSBbJ3gnLCAneScsICdjdHgnLCAndmVsJywgJ2NvbG9yJywgJ2xlbmd0aCddXG4gICAgY29uc3QgbXlPYmpLZXlzID0gT2JqZWN0LmtleXMoaGVhbHRoT2JqZWN0KVxuXG4gICAgaXQoJ3Nob3VsZCBjcmVhdGUgYW4gb2JqZWN0IHdpdGggb25seSB0aGUgZ2l2ZW4gYXR0cmlidXRlcyBhbmQgZGVmYXVsdHMnLCAoKSA9PiB7XG4gICAgICAgIGhlYWx0aE9iamVjdC5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgneCcpLmVxdWFsKDUpXG4gICAgICAgIGhlYWx0aE9iamVjdC5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgneScpLmVxdWFsKDEwKVxuICAgICAgICBoZWFsdGhPYmplY3Quc2hvdWxkLmhhdmUucHJvcGVydHkoJ2xlbmd0aCcpLmVxdWFsKEMuSEVBTFRIX0xFTkdUSClcbiAgICAgICAgaGVhbHRoT2JqZWN0LnNob3VsZC5oYXZlLnByb3BlcnR5KCdjb2xvcicpLmVxdWFsKEMuSEVBTFRIX0NPTE9SKVxuXG4gICAgICAgIGhlYWx0aE9iamVjdC5zaG91bGQubm90LmhhdmUucHJvcGVydHkoJ3ZlbCcpXG5cbiAgICAgICAgZXhwZWN0KHBvc3NpYmxlSGVhbHRoT2JqZWN0S2V5cykudG8uaW5jbHVkZS5tZW1iZXJzKG15T2JqS2V5cylcbiAgICB9KTtcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "health_test.js"
      ],
      "names": [
        "should",
        "chai",
        "expect",
        "describe",
        "attributes",
        "pos",
        "x",
        "y",
        "healthObject",
        "Health",
        "possibleHealthObjectKeys",
        "myObjKeys",
        "Object",
        "keys",
        "it",
        "have",
        "property",
        "equal",
        "C",
        "HEALTH_LENGTH",
        "HEALTH_COLOR",
        "not",
        "to",
        "include",
        "members"
      ],
      "mappings": ";;;;AACA;;AACA;;AACA;;;;;;;;AAHA;AAKA,IAAIA,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAb;AACA,IAAIE,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAGAC,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AAClC,MAAMC,UAAU,GAAG;AACfC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX;AADU,GAAnB;AAGA,MAAIC,YAAY,GAAG,IAAIC,kBAAJ,CAAWL,UAAX,CAAnB;AACA,MAAMM,wBAAwB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,KAAX,EAAkB,KAAlB,EAAyB,OAAzB,EAAkC,QAAlC,CAAjC;AACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYL,YAAZ,CAAlB;AAEAM,EAAAA,EAAE,CAAC,qEAAD,EAAwE,YAAM;AAC5EN,IAAAA,YAAY,CAACR,MAAb,CAAoBe,IAApB,CAAyBC,QAAzB,CAAkC,GAAlC,EAAuCC,KAAvC,CAA6C,CAA7C;AACAT,IAAAA,YAAY,CAACR,MAAb,CAAoBe,IAApB,CAAyBC,QAAzB,CAAkC,GAAlC,EAAuCC,KAAvC,CAA6C,EAA7C;AACAT,IAAAA,YAAY,CAACR,MAAb,CAAoBe,IAApB,CAAyBC,QAAzB,CAAkC,QAAlC,EAA4CC,KAA5C,CAAkDC,CAAC,CAACC,aAApD;AACAX,IAAAA,YAAY,CAACR,MAAb,CAAoBe,IAApB,CAAyBC,QAAzB,CAAkC,OAAlC,EAA2CC,KAA3C,CAAiDC,CAAC,CAACE,YAAnD;AAEAZ,IAAAA,YAAY,CAACR,MAAb,CAAoBqB,GAApB,CAAwBN,IAAxB,CAA6BC,QAA7B,CAAsC,KAAtC;AAEAd,IAAAA,MAAM,CAACQ,wBAAD,CAAN,CAAiCY,EAAjC,CAAoCC,OAApC,CAA4CC,OAA5C,CAAoDb,SAApD;AACH,GATC,CAAF;AAUH,CAlBO,CAAR",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "sourcesContent": [
        "// import assert from 'assert';\nimport * as chai from 'chai';\nimport * as C from '../src/constants'\nimport Health from '../src/health'\n\nlet should = chai.should();\nlet expect = chai.expect;\n\n\ndescribe('Health Object Tests', () => {\n    const attributes = {\n        pos: { x: 5, y: 10, },\n    }\n    let healthObject = new Health(attributes)\n    const possibleHealthObjectKeys = ['x', 'y', 'ctx', 'vel', 'color', 'length']\n    const myObjKeys = Object.keys(healthObject)\n\n    it('should create an object with only the given attributes and defaults', () => {\n        healthObject.should.have.property('x').equal(5)\n        healthObject.should.have.property('y').equal(10)\n        healthObject.should.have.property('length').equal(C.HEALTH_LENGTH)\n        healthObject.should.have.property('color').equal(C.HEALTH_COLOR)\n\n        healthObject.should.not.have.property('vel')\n\n        expect(possibleHealthObjectKeys).to.include.members(myObjKeys)\n    });\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1610046813423
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/test/movement.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/test/movement.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/test/movement.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/test/movement.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
        "sourceFileName": "movement.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar chai = _interopRequireWildcard(require(\"chai\"));\n\nvar C = _interopRequireWildcard(require(\"../src/constants\"));\n\nvar _movement = _interopRequireDefault(require(\"../src/movement\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// import assert from 'assert';\nvar should = chai.should();\nvar expect = chai.expect;\ndescribe('Movement Object Tests', function () {\n  var attributes = {\n    length: 20,\n    width: 10\n  };\n  var movement = new _movement[\"default\"](attributes);\n  var possibleMovementKeys = ['length', 'width'];\n  var myObjKeys = Object.keys(movement);\n  it('should create an object with only the given attributes and defaults', function () {\n    movement.should.have.property('length').equal(20);\n    movement.should.have.property('width').equal(10);\n    expect(possibleMovementKeys).to.include.members(myObjKeys);\n  });\n  it('should correctly assert if object is in play area', function () {\n    var posInCanvas = {\n      x: 200,\n      y: 300\n    };\n    var posOutOfCanvas = {\n      x: 700,\n      y: 200\n    };\n    expect(movement.isInCanvas(posInCanvas)).to.be[\"true\"];\n    expect(movement.isInCanvas(posOutOfCanvas)).to.be[\"false\"];\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmVtZW50LmpzIl0sIm5hbWVzIjpbInNob3VsZCIsImNoYWkiLCJleHBlY3QiLCJkZXNjcmliZSIsImF0dHJpYnV0ZXMiLCJsZW5ndGgiLCJ3aWR0aCIsIm1vdmVtZW50IiwiTW92ZW1lbnQiLCJwb3NzaWJsZU1vdmVtZW50S2V5cyIsIm15T2JqS2V5cyIsIk9iamVjdCIsImtleXMiLCJpdCIsImhhdmUiLCJwcm9wZXJ0eSIsImVxdWFsIiwidG8iLCJpbmNsdWRlIiwibWVtYmVycyIsInBvc0luQ2FudmFzIiwieCIsInkiLCJwb3NPdXRPZkNhbnZhcyIsImlzSW5DYW52YXMiLCJiZSJdLCJtYXBwaW5ncyI6Ijs7OztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUhBO0FBS0EsSUFBSUEsTUFBTSxHQUFHQyxJQUFJLENBQUNELE1BQUwsRUFBYjtBQUNBLElBQUlFLE1BQU0sR0FBR0QsSUFBSSxDQUFDQyxNQUFsQjtBQUdBQyxRQUFRLENBQUMsdUJBQUQsRUFBMEIsWUFBTTtBQUNwQyxNQUFNQyxVQUFVLEdBQUc7QUFBRUMsSUFBQUEsTUFBTSxFQUFFLEVBQVY7QUFBY0MsSUFBQUEsS0FBSyxFQUFFO0FBQXJCLEdBQW5CO0FBQ0EsTUFBSUMsUUFBUSxHQUFHLElBQUlDLG9CQUFKLENBQWFKLFVBQWIsQ0FBZjtBQUNBLE1BQU1LLG9CQUFvQixHQUFHLENBQUMsUUFBRCxFQUFXLE9BQVgsQ0FBN0I7QUFDQSxNQUFNQyxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZTCxRQUFaLENBQWxCO0FBRUFNLEVBQUFBLEVBQUUsQ0FBQyxxRUFBRCxFQUF3RSxZQUFNO0FBQzVFTixJQUFBQSxRQUFRLENBQUNQLE1BQVQsQ0FBZ0JjLElBQWhCLENBQXFCQyxRQUFyQixDQUE4QixRQUE5QixFQUF3Q0MsS0FBeEMsQ0FBOEMsRUFBOUM7QUFDQVQsSUFBQUEsUUFBUSxDQUFDUCxNQUFULENBQWdCYyxJQUFoQixDQUFxQkMsUUFBckIsQ0FBOEIsT0FBOUIsRUFBdUNDLEtBQXZDLENBQTZDLEVBQTdDO0FBQ0FkLElBQUFBLE1BQU0sQ0FBQ08sb0JBQUQsQ0FBTixDQUE2QlEsRUFBN0IsQ0FBZ0NDLE9BQWhDLENBQXdDQyxPQUF4QyxDQUFnRFQsU0FBaEQ7QUFDSCxHQUpDLENBQUY7QUFNQUcsRUFBQUEsRUFBRSxDQUFDLG1EQUFELEVBQXNELFlBQU07QUFDMUQsUUFBTU8sV0FBVyxHQUFHO0FBQUVDLE1BQUFBLENBQUMsRUFBRSxHQUFMO0FBQVVDLE1BQUFBLENBQUMsRUFBRTtBQUFiLEtBQXBCO0FBQ0EsUUFBTUMsY0FBYyxHQUFHO0FBQUVGLE1BQUFBLENBQUMsRUFBRSxHQUFMO0FBQVVDLE1BQUFBLENBQUMsRUFBRTtBQUFiLEtBQXZCO0FBRUFwQixJQUFBQSxNQUFNLENBQUNLLFFBQVEsQ0FBQ2lCLFVBQVQsQ0FBb0JKLFdBQXBCLENBQUQsQ0FBTixDQUF5Q0gsRUFBekMsQ0FBNENRLEVBQTVDO0FBQ0F2QixJQUFBQSxNQUFNLENBQUNLLFFBQVEsQ0FBQ2lCLFVBQVQsQ0FBb0JELGNBQXBCLENBQUQsQ0FBTixDQUE0Q04sRUFBNUMsQ0FBK0NRLEVBQS9DO0FBQ0gsR0FOQyxDQUFGO0FBT0gsQ0FuQk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvamFyZWQvRGVza3RvcC9Db2RpbmcvYWN0aW9uX3JwZy90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcbmltcG9ydCAqIGFzIGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgKiBhcyBDIGZyb20gJy4uL3NyYy9jb25zdGFudHMnXG5pbXBvcnQgTW92ZW1lbnQgZnJvbSAnLi4vc3JjL21vdmVtZW50J1xuXG5sZXQgc2hvdWxkID0gY2hhaS5zaG91bGQoKTtcbmxldCBleHBlY3QgPSBjaGFpLmV4cGVjdDtcblxuXG5kZXNjcmliZSgnTW92ZW1lbnQgT2JqZWN0IFRlc3RzJywgKCkgPT4ge1xuICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7IGxlbmd0aDogMjAsIHdpZHRoOiAxMCB9XG4gICAgbGV0IG1vdmVtZW50ID0gbmV3IE1vdmVtZW50KGF0dHJpYnV0ZXMpXG4gICAgY29uc3QgcG9zc2libGVNb3ZlbWVudEtleXMgPSBbJ2xlbmd0aCcsICd3aWR0aCddXG4gICAgY29uc3QgbXlPYmpLZXlzID0gT2JqZWN0LmtleXMobW92ZW1lbnQpXG5cbiAgICBpdCgnc2hvdWxkIGNyZWF0ZSBhbiBvYmplY3Qgd2l0aCBvbmx5IHRoZSBnaXZlbiBhdHRyaWJ1dGVzIGFuZCBkZWZhdWx0cycsICgpID0+IHtcbiAgICAgICAgbW92ZW1lbnQuc2hvdWxkLmhhdmUucHJvcGVydHkoJ2xlbmd0aCcpLmVxdWFsKDIwKVxuICAgICAgICBtb3ZlbWVudC5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnd2lkdGgnKS5lcXVhbCgxMClcbiAgICAgICAgZXhwZWN0KHBvc3NpYmxlTW92ZW1lbnRLZXlzKS50by5pbmNsdWRlLm1lbWJlcnMobXlPYmpLZXlzKVxuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBjb3JyZWN0bHkgYXNzZXJ0IGlmIG9iamVjdCBpcyBpbiBwbGF5IGFyZWEnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBvc0luQ2FudmFzID0geyB4OiAyMDAsIHk6IDMwMCB9XG4gICAgICAgIGNvbnN0IHBvc091dE9mQ2FudmFzID0geyB4OiA3MDAsIHk6IDIwMCB9XG5cbiAgICAgICAgZXhwZWN0KG1vdmVtZW50LmlzSW5DYW52YXMocG9zSW5DYW52YXMpKS50by5iZS50cnVlXG4gICAgICAgIGV4cGVjdChtb3ZlbWVudC5pc0luQ2FudmFzKHBvc091dE9mQ2FudmFzKSkudG8uYmUuZmFsc2VcbiAgICB9KVxufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "movement.js"
      ],
      "names": [
        "should",
        "chai",
        "expect",
        "describe",
        "attributes",
        "length",
        "width",
        "movement",
        "Movement",
        "possibleMovementKeys",
        "myObjKeys",
        "Object",
        "keys",
        "it",
        "have",
        "property",
        "equal",
        "to",
        "include",
        "members",
        "posInCanvas",
        "x",
        "y",
        "posOutOfCanvas",
        "isInCanvas",
        "be"
      ],
      "mappings": ";;;;AACA;;AACA;;AACA;;;;;;;;AAHA;AAKA,IAAIA,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAb;AACA,IAAIE,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAGAC,QAAQ,CAAC,uBAAD,EAA0B,YAAM;AACpC,MAAMC,UAAU,GAAG;AAAEC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAAnB;AACA,MAAIC,QAAQ,GAAG,IAAIC,oBAAJ,CAAaJ,UAAb,CAAf;AACA,MAAMK,oBAAoB,GAAG,CAAC,QAAD,EAAW,OAAX,CAA7B;AACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYL,QAAZ,CAAlB;AAEAM,EAAAA,EAAE,CAAC,qEAAD,EAAwE,YAAM;AAC5EN,IAAAA,QAAQ,CAACP,MAAT,CAAgBc,IAAhB,CAAqBC,QAArB,CAA8B,QAA9B,EAAwCC,KAAxC,CAA8C,EAA9C;AACAT,IAAAA,QAAQ,CAACP,MAAT,CAAgBc,IAAhB,CAAqBC,QAArB,CAA8B,OAA9B,EAAuCC,KAAvC,CAA6C,EAA7C;AACAd,IAAAA,MAAM,CAACO,oBAAD,CAAN,CAA6BQ,EAA7B,CAAgCC,OAAhC,CAAwCC,OAAxC,CAAgDT,SAAhD;AACH,GAJC,CAAF;AAMAG,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC1D,QAAMO,WAAW,GAAG;AAAEC,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE;AAAb,KAApB;AACA,QAAMC,cAAc,GAAG;AAAEF,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE;AAAb,KAAvB;AAEApB,IAAAA,MAAM,CAACK,QAAQ,CAACiB,UAAT,CAAoBJ,WAApB,CAAD,CAAN,CAAyCH,EAAzC,CAA4CQ,EAA5C;AACAvB,IAAAA,MAAM,CAACK,QAAQ,CAACiB,UAAT,CAAoBD,cAApB,CAAD,CAAN,CAA4CN,EAA5C,CAA+CQ,EAA/C;AACH,GANC,CAAF;AAOH,CAnBO,CAAR",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "sourcesContent": [
        "// import assert from 'assert';\nimport * as chai from 'chai';\nimport * as C from '../src/constants'\nimport Movement from '../src/movement'\n\nlet should = chai.should();\nlet expect = chai.expect;\n\n\ndescribe('Movement Object Tests', () => {\n    const attributes = { length: 20, width: 10 }\n    let movement = new Movement(attributes)\n    const possibleMovementKeys = ['length', 'width']\n    const myObjKeys = Object.keys(movement)\n\n    it('should create an object with only the given attributes and defaults', () => {\n        movement.should.have.property('length').equal(20)\n        movement.should.have.property('width').equal(10)\n        expect(possibleMovementKeys).to.include.members(myObjKeys)\n    });\n\n    it('should correctly assert if object is in play area', () => {\n        const posInCanvas = { x: 200, y: 300 }\n        const posOutOfCanvas = { x: 700, y: 200 }\n\n        expect(movement.isInCanvas(posInCanvas)).to.be.true\n        expect(movement.isInCanvas(posOutOfCanvas)).to.be.false\n    })\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1610047752689
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/test/movement_test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/test/movement_test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/test/movement_test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/test/movement_test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
        "sourceFileName": "movement_test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar chai = _interopRequireWildcard(require(\"chai\"));\n\nvar C = _interopRequireWildcard(require(\"../src/constants\"));\n\nvar _movement = _interopRequireDefault(require(\"../src/movement\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// import assert from 'assert';\nvar should = chai.should();\nvar expect = chai.expect;\ndescribe('Movement Object Tests', function () {\n  var attributes = {\n    length: 20,\n    width: 10\n  };\n  var movement = new _movement[\"default\"](attributes);\n  it('should create an object with only the given attributes and defaults', function () {\n    var possibleMovementKeys = ['length', 'width'];\n    var myObjKeys = Object.keys(movement);\n    movement.should.have.property('length').equal(20);\n    movement.should.have.property('width').equal(10);\n    expect(possibleMovementKeys).to.include.members(myObjKeys);\n  });\n  it('should correctly assert if object is in play area', function () {\n    var posInCanvas = {\n      x: 200,\n      y: 300\n    };\n    var posOutOfCanvas = {\n      x: 700,\n      y: 200\n    };\n    expect(movement.isInCanvas(posInCanvas)).to.be[\"true\"];\n    expect(movement.isInCanvas(posOutOfCanvas)).to.be[\"false\"];\n  });\n  it('should assert if a move is valid in the x direction', function () {\n    var posInCanvas = 200;\n    var posOutOfCanvas = 595;\n    var dir = 'right';\n    expect(movement.validXMove(dir, posInCanvas)).to.be[\"true\"];\n    expect(movement.validXMove(dir, posOutOfCanvas)).to.be[\"false\"];\n  });\n  it('should assert if a move is valid in the y direction', function () {\n    var posInCanvas = 200;\n    var posOutOfCanvas = 595;\n    var dir = 'down';\n    expect(movement.validYMove(dir, posInCanvas)).to.be[\"true\"];\n    expect(movement.validYMove(dir, posOutOfCanvas)).to.be[\"false\"];\n  });\n  it('should assert if a move is valid in a diagonal direction', function () {\n    var posInCanvas = {\n      x: 200,\n      y: 300\n    };\n    var posOutOfCanvas = {\n      x: 560,\n      y: 400\n    };\n    var dir = 'down right';\n    expect(movement.validMove(dir, posInCanvas.x, posInCanvas.y)).to.be[\"true\"];\n    expect(movement.validMove(dir, posOutOfCanvas.x, posOutOfCanvas.y)).to.be[\"false\"];\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmVtZW50X3Rlc3QuanMiXSwibmFtZXMiOlsic2hvdWxkIiwiY2hhaSIsImV4cGVjdCIsImRlc2NyaWJlIiwiYXR0cmlidXRlcyIsImxlbmd0aCIsIndpZHRoIiwibW92ZW1lbnQiLCJNb3ZlbWVudCIsIml0IiwicG9zc2libGVNb3ZlbWVudEtleXMiLCJteU9iaktleXMiLCJPYmplY3QiLCJrZXlzIiwiaGF2ZSIsInByb3BlcnR5IiwiZXF1YWwiLCJ0byIsImluY2x1ZGUiLCJtZW1iZXJzIiwicG9zSW5DYW52YXMiLCJ4IiwieSIsInBvc091dE9mQ2FudmFzIiwiaXNJbkNhbnZhcyIsImJlIiwiZGlyIiwidmFsaWRYTW92ZSIsInZhbGlkWU1vdmUiLCJ2YWxpZE1vdmUiXSwibWFwcGluZ3MiOiI7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFIQTtBQUtBLElBQUlBLE1BQU0sR0FBR0MsSUFBSSxDQUFDRCxNQUFMLEVBQWI7QUFDQSxJQUFJRSxNQUFNLEdBQUdELElBQUksQ0FBQ0MsTUFBbEI7QUFHQUMsUUFBUSxDQUFDLHVCQUFELEVBQTBCLFlBQU07QUFDcEMsTUFBTUMsVUFBVSxHQUFHO0FBQUVDLElBQUFBLE1BQU0sRUFBRSxFQUFWO0FBQWNDLElBQUFBLEtBQUssRUFBRTtBQUFyQixHQUFuQjtBQUNBLE1BQUlDLFFBQVEsR0FBRyxJQUFJQyxvQkFBSixDQUFhSixVQUFiLENBQWY7QUFFQUssRUFBQUEsRUFBRSxDQUFDLHFFQUFELEVBQXdFLFlBQU07QUFDNUUsUUFBTUMsb0JBQW9CLEdBQUcsQ0FBQyxRQUFELEVBQVcsT0FBWCxDQUE3QjtBQUNBLFFBQU1DLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlOLFFBQVosQ0FBbEI7QUFFQUEsSUFBQUEsUUFBUSxDQUFDUCxNQUFULENBQWdCYyxJQUFoQixDQUFxQkMsUUFBckIsQ0FBOEIsUUFBOUIsRUFBd0NDLEtBQXhDLENBQThDLEVBQTlDO0FBQ0FULElBQUFBLFFBQVEsQ0FBQ1As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ZXJzL2phcmVkL0Rlc2t0b3AvQ29kaW5nL2FjdGlvbl9ycGcvdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5pbXBvcnQgKiBhcyBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0ICogYXMgQyBmcm9tICcuLi9zcmMvY29uc3RhbnRzJ1xuaW1wb3J0IE1vdmVtZW50IGZyb20gJy4uL3NyYy9tb3ZlbWVudCdcblxubGV0IHNob3VsZCA9IGNoYWkuc2hvdWxkKCk7XG5sZXQgZXhwZWN0ID0gY2hhaS5leHBlY3Q7XG5cblxuZGVzY3JpYmUoJ01vdmVtZW50IE9iamVjdCBUZXN0cycsICgpID0+IHtcbiAgICBjb25zdCBhdHRyaWJ1dGVzID0geyBsZW5ndGg6IDIwLCB3aWR0aDogMTAgfVxuICAgIGxldCBtb3ZlbWVudCA9IG5ldyBNb3ZlbWVudChhdHRyaWJ1dGVzKVxuXG4gICAgaXQoJ3Nob3VsZCBjcmVhdGUgYW4gb2JqZWN0IHdpdGggb25seSB0aGUgZ2l2ZW4gYXR0cmlidXRlcyBhbmQgZGVmYXVsdHMnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBvc3NpYmxlTW92ZW1lbnRLZXlzID0gWydsZW5ndGgnLCAnd2lkdGgnXVxuICAgICAgICBjb25zdCBteU9iaktleXMgPSBPYmplY3Qua2V5cyhtb3ZlbWVudClcblxuICAgICAgICBtb3ZlbWVudC5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnbGVuZ3RoJykuZXF1YWwoMjApXG4gICAgICAgIG1vdmVtZW50LnNob3VsZC5oYXZlLnByb3BlcnR5KCd3aWR0aCcpLmVxdWFsKDEwKVxuICAgICAgICBleHBlY3QocG9zc2libGVNb3ZlbWVudEtleXMpLnRvLmluY2x1ZGUubWVtYmVycyhteU9iaktleXMpXG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGNvcnJlY3RseSBhc3NlcnQgaWYgb2JqZWN0IGlzIGluIHBsYXkgYXJlYScsICgpID0+IHtcbiAgICAgICAgY29uc3QgcG9zSW5DYW52YXMgPSB7IHg6IDIwMCwgeTogMzAwIH1cbiAgICAgICAgY29uc3QgcG9zT3V0T2ZDYW52YXMgPSB7IHg6IDcwMCwgeTogMjAwIH1cblxuICAgICAgICBleHBlY3QobW92ZW1lbnQuaXNJbkNhbnZhcyhwb3NJbkNhbnZhcykpLnRvLmJlLnRydWVcbiAgICAgICAgZXhwZWN0KG1vdmVtZW50LmlzSW5DYW52YXMocG9zT3V0T2ZDYW52YXMpKS50by5iZS5mYWxzZVxuICAgIH0pXG4gICAgXG4gICAgaXQoJ3Nob3VsZCBhc3NlcnQgaWYgYSBtb3ZlIGlzIHZhbGlkIGluIHRoZSB4IGRpcmVjdGlvbicsICgpID0+IHtcbiAgICAgICAgY29uc3QgcG9zSW5DYW52YXMgPSAgMjAwXG4gICAgICAgIGNvbnN0IHBvc091dE9mQ2FudmFzID0gNTk1XG4gICAgICAgIGNvbnN0IGRpciA9ICdyaWdodCdcblxuICAgICAgICBleHBlY3QobW92ZW1lbnQudmFsaWRYTW92ZShkaXIsIHBvc0luQ2FudmFzKSkudG8uYmUudHJ1ZVxuICAgICAgICBleHBlY3QobW92ZW1lbnQudmFsaWRYTW92ZShkaXIsIHBvc091dE9mQ2FudmFzKSkudG8uYmUuZmFsc2VcbiAgICB9KVxuXG4gICAgaXQoJ3Nob3VsZCBhc3NlcnQgaWYgYSBtb3ZlIGlzIHZhbGlkIGluIHRoZSB5IGRpcmVjdGlvbicsICgpID0+IHtcbiAgICAgICAgY29uc3QgcG9zSW5DYW52YXMgPSAgMjAwXG4gICAgICAgIGNvbnN0IHBvc091dE9mQ2FudmFzID0gNTk1XG4gICAgICAgIGNvbnN0IGRpciA9ICdkb3duJ1xuXG4gICAgICAgIGV4cGVjdChtb3ZlbWVudC52YWxpZFlNb3ZlKGRpciwgcG9zSW5DYW52YXMpKS50by5iZS50cnVlXG4gICAgICAgIGV4cGVjdChtb3ZlbWVudC52YWxpZFlNb3ZlKGRpciwgcG9zT3V0T2ZDYW52YXMpKS50by5iZS5mYWxzZVxuICAgIH0pXG5cbiAgICBpdCgnc2hvdWxkIGFzc2VydCBpZiBhIG1vdmUgaXMgdmFsaWQgaW4gYSBkaWFnb25hbCBkaXJlY3Rpb24nLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBvc0luQ2FudmFzID0gIHsgeDogMjAwLCB5OiAzMDAgfVxuICAgICAgICBjb25zdCBwb3NPdXRPZkNhbnZhcyA9IHsgeDogNTYwLCB5OiA0MDAgfVxuICAgICAgICBjb25zdCBkaXIgPSAnZG93biByaWdodCdcblxuICAgICAgICBleHBlY3QobW92ZW1lbnQudmFsaWRNb3ZlKGRpciwgcG9zSW5DYW52YXMueCwgcG9zSW5DYW52YXMueSkpLnRvLmJlLnRydWVcbiAgICAgICAgZXhwZWN0KG1vdmVtZW50LnZhbGlkTW92ZShkaXIsIHBvc091dE9mQ2FudmFzLngsIHBvc091dE9mQ2FudmFzLnkpKVxuICAgICAgICAgICAgLnRvLmJlLmZhbHNlXG4gICAgfSlcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "movement_test.js"
      ],
      "names": [
        "should",
        "chai",
        "expect",
        "describe",
        "attributes",
        "length",
        "width",
        "movement",
        "Movement",
        "it",
        "possibleMovementKeys",
        "myObjKeys",
        "Object",
        "keys",
        "have",
        "property",
        "equal",
        "to",
        "include",
        "members",
        "posInCanvas",
        "x",
        "y",
        "posOutOfCanvas",
        "isInCanvas",
        "be",
        "dir",
        "validXMove",
        "validYMove",
        "validMove"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "sourcesContent": [
        "// import assert from 'assert';\nimport * as chai from 'chai';\nimport * as C from '../src/constants'\nimport Movement from '../src/movement'\n\nlet should = chai.should();\nlet expect = chai.expect;\n\n\ndescribe('Movement Object Tests', () => {\n    const attributes = { length: 20, width: 10 }\n    let movement = new Movement(attributes)\n\n    it('should create an object with only the given attributes and defaults', () => {\n        const possibleMovementKeys = ['length', 'width']\n        const myObjKeys = Object.keys(movement)\n\n        movement.should.have.property('length').equal(20)\n        movement.should.have.property('width').equal(10)\n        expect(possibleMovementKeys).to.include.members(myObjKeys)\n    });\n\n    it('should correctly assert if object is in play area', () => {\n        const posInCanvas = { x: 200, y: 300 }\n        const posOutOfCanvas = { x: 700, y: 200 }\n\n        expect(movement.isInCanvas(posInCanvas)).to.be.true\n        expect(movement.isInCanvas(posOutOfCanvas)).to.be.false\n    })\n    \n    it('should assert if a move is valid in the x direction', () => {\n        const posInCanvas =  200\n        const posOutOfCanvas = 595\n        const dir = 'right'\n\n        expect(movement.validXMove(dir, posInCanvas)).to.be.true\n        expect(movement.validXMove(dir, posOutOfCanvas)).to.be.false\n    })\n\n    it('should assert if a move is valid in the y direction', () => {\n        const posInCanvas =  200\n        const posOutOfCanvas = 595\n        const dir = 'down'\n\n        expect(movement.validYMove(dir, posInCanvas)).to.be.true\n        expect(movement.validYMove(dir, posOutOfCanvas)).to.be.false\n    })\n\n    it('should assert if a move is valid in a diagonal direction', () => {\n        const posInCanvas =  { x: 200, y: 300 }\n        const posOutOfCanvas = { x: 560, y: 400 }\n        const dir = 'down right'\n\n        expect(movement.validMove(dir, posInCanvas.x, posInCanvas.y)).to.be.true\n        expect(movement.validMove(dir, posOutOfCanvas.x, posOutOfCanvas.y))\n            .to.be.false\n    })\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1610064902983
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/src/weapon_movement.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/src/weapon_movement.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/src/weapon_movement.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/src/weapon_movement.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
        "sourceFileName": "weapon_movement.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar C = _interopRequireWildcard(require(\"./constants\"));\n\nvar _movement = _interopRequireDefault(require(\"./movement\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar WeaponMovement = /*#__PURE__*/function (_Movement) {\n  _inherits(WeaponMovement, _Movement);\n\n  var _super = _createSuper(WeaponMovement);\n\n  function WeaponMovement(attributes) {\n    _classCallCheck(this, WeaponMovement);\n\n    return _super.call(this, attributes);\n  }\n\n  _createClass(WeaponMovement, [{\n    key: \"getNewPosUsingDir\",\n    value: function getNewPosUsingDir(type, moveData) {\n      var _this$getCoordInfo = this.getCoordInfo(type, moveData),\n          oldX = _this$getCoordInfo.oldX,\n          oldY = _this$getCoordInfo.oldY;\n\n      var newX = oldX;\n      var newY = oldY;\n      var delta = C.WEAPON_DIST;\n\n      switch (moveData.heroDir) {\n        case C.DIR_UP:\n          newY = newY - delta;\n          break;\n\n        case C.DIR_DOWN:\n          newY = newY + delta;\n          break;\n\n        case C.DIR_LEFT:\n          newX = newX - delta;\n          break;\n\n        case C.DIR_RIGHT:\n          newX = newX + delta;\n          break;\n\n        case C.DIR_LEFT_UP:\n          newX = newX - delta;\n          newY = newY - delta;\n          break;\n\n        case C.DIR_RIGHT_UP:\n          newX = newX + delta;\n          newY = newY - delta;\n          break;\n\n        case C.DIR_DOWN_LEFT:\n          newX = newX - delta;\n          newY = newY + delta;\n          break;\n\n        case C.DIR_DOWN_RIGHT:\n          newX = newX + delta;\n          newY = newY + delta;\n          break;\n      }\n\n      return {\n        newX: newX,\n        newY: newY\n      };\n    }\n  }, {\n    key: \"getCoordInfo\",\n    value: function getCoordInfo(type, _ref) {\n      var x = _ref.x,\n          y = _ref.y;\n      var oldX, oldY;\n\n      switch (type) {\n        case C.WEAPON_DIR_VERTICAL:\n          oldX = x + (C.HERO_SPRITE_SCALED_WIDTH - this.width) / 2;\n          oldY = y + (C.HERO_SPRITE_SCALED_LENGTH - this.length) / 2;\n          break;\n\n        case C.WEAPON_DIR_HORIZONTAL:\n          oldX = x - (this.length - C.HERO_SPRITE_SCALED_WIDTH) / 2;\n          oldY = y - (this.width - C.HERO_SPRITE_SCALED_LENGTH) / 2;\n          break;\n      }\n\n      return {\n        oldX: oldX,\n        oldY: oldY\n      };\n    }\n  }, {\n    key: \"getNewDir\",\n    value: function getNewDir(dir) {\n      switch (dir) {\n        case C.DIR_UP:\n        case C.DIR_DOWN:\n          return C.WEAPON_DIR_HORIZONTAL;\n\n        case C.DIR_LEFT:\n        case C.DIR_RIGHT:\n          return C.WEAPON_DIR_VERTICAL;\n\n        default:\n          return C.WEAPON_DIR_HORIZONTAL;\n      }\n    }\n  }]);\n\n  return WeaponMovement;\n}(_movement[\"default\"]);\n\nvar _default = WeaponMovement;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYXBvbl9tb3ZlbWVudC5qcyJdLCJuYW1lcyI6WyJXZWFwb25Nb3ZlbWVudCIsImF0dHJpYnV0ZXMiLCJ0eXBlIiwibW92ZURhdGEiLCJnZXRDb29yZEluZm8iLCJvbGRYIiwib2xkWSIsIm5ld1giLCJuZXdZIiwiZGVsdGEiLCJDIiwiV0VBUE9OX0RJU1QiLCJoZXJvRGlyIiwiRElSX1VQIiwiRElSX0RPV04iLCJESVJfTEVGVCIsIkRJUl9SSUdIVCIsIkRJUl9MRUZUX1VQIiwiRElSX1JJR0hUX1VQIiwiRElSX0RPV05fTEVGVCIsIkRJUl9ET1dOX1JJR0hUIiwieCIsInkiLCJXRUFQT05fRElSX1ZFUlRJQ0FMIiwiSEVST19TUFJJVEVfU0NBTEVEX1dJRFRIIiwid2lkdGgiLCJIRVJPX1NQUklURV9TQ0FMRURfTEVOR1RIIiwibGVuZ3RoIiwiV0VBUE9OX0RJUl9IT1JJWk9OVEFMIiwiZGlyIiwiTW92ZW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLGM7Ozs7O0FBQ0YsMEJBQVlDLFVBQVosRUFBd0I7QUFBQTs7QUFBQSw2QkFDZEEsVUFEYztBQUV2Qjs7OztzQ0FFaUJDLEksRUFBTUMsUSxFQUFVO0FBQUEsK0JBQ1AsS0FBS0MsWUFBTCxDQUFrQkYsSUFBbEIsRUFBd0JDLFFBQXhCLENBRE87QUFBQSxVQUN0QkUsSUFEc0Isc0JBQ3RCQSxJQURzQjtBQUFBLFVBQ2hCQyxJQURnQixzQkFDaEJBLElBRGdCOztBQUU5QixVQUFJQyxJQUFJLEdBQUdGLElBQVg7QUFDQSxVQUFJRyxJQUFJLEdBQUdGLElBQVg7QUFDQSxVQUFNRyxLQUFLLEdBQUdDLENBQUMsQ0FBQ0MsV0FBaEI7O0FBRUEsY0FBUVIsUUFBUSxDQUFDUyxPQUFqQjtBQUNJLGFBQUtGLENBQUMsQ0FBQ0csTUFBUDtBQUNJTCxVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0MsS0FBZDtBQUNBOztBQUNKLGFBQUtDLENBQUMsQ0FBQ0ksUUFBUDtBQUNJTixVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0MsS0FBZDtBQUNBOztBQUNKLGFBQUtDLENBQUMsQ0FBQ0ssUUFBUDtBQUNJUixVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0UsS0FBZDtBQUNBOztBQUNKLGFBQUtDLENBQUMsQ0FBQ00sU0FBUDtBQUNJVCxVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0UsS0FBZDtBQUNBOztBQUNKLGFBQUtDLENBQUMsQ0FBQ08sV0FBUDtBQUNJVixVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0UsS0FBZDtBQUNBRCxVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0MsS0FBZDtBQUNBOztBQUNKLGFBQUtDLENBQUMsQ0FBQ1EsWUFBUDtBQUNJWCxVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0UsS0FBZDtBQUNBRCxVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0MsS0FBZDtBQUNBOztBQUNKLGFBQUtDLENBQUMsQ0FBQ1MsYUFBUDtBQUNJWixVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0UsS0FBZDtBQUNBRCxVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0MsS0FBZDtBQUNBOztBQUNKLGFBQUtDLENBQUMsQ0FBQ1UsY0FBUDtBQUNJYixVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0UsS0FBZDtBQUNBRCxVQUFBQSxJQUFJLEdBQUdBLElBQUksR0FBR0MsS0FBZDtBQUNBO0FBNUJSOztBQThCQSxhQUFRO0FBQUVGLFFBQUFBLElBQUksRUFBSkEsSUFBRjtBQUFRQyxRQUFBQSxJQUFJLEVBQUpBO0FBQVIsT0FBUjtBQUNIOzs7aUNBRVlOLEksUUFBZ0I7QUFBQSxVQUFSbUIsQ0FBUSxRQUFSQSxDQUFRO0FBQUEsVUFBTEMsQ0FBSyxRQUFMQSxDQUFLO0FBQ3pCLFVBQUlqQixJQUFKLEVBQVVDLElBQVY7O0FBQ0EsY0FBUUosSUFBUjtBQUNJLGFBQUtRLENBQUMsQ0FBQ2EsbUJBQVA7QUFDSWxCLFVBQUFBLElBQUksR0FBR2dCLENBQUMsR0FBRyxDQUFDWCxDQUFDLENBQUNjLHdCQUFGLEdBQTZCLEtBQUtDLEtBQW5DLElBQTRDLENBQXZEO0FBQ0FuQixVQUFBQSxJQUFJLEdBQUdnQixDQUFDLEdBQUcsQ0FBQ1osQ0FBQyxDQUFDZ0IseUJBQUYsR0FBOEIsS0FBS0MsTUFBcEMsSUFBOEMsQ0FBekQ7QUFDQTs7QUFDSixhQUFLakIsQ0FBQyxDQUFDa0IscUJBQVA7QUFDSXZCLFVBQUFBLElBQUksR0FBR2dCLENBQUMsR0FBRyxDQUFDLEtBQUtNLE1BQUwsR0FBY2pCLENBQUMsQ0FBQ2Msd0JBQWpCLElBQTZDLENBQXhEO0FBQ0FsQixVQUFBQSxJQUFJLEdBQUdnQixDQUFDLEdBQUcsQ0FBQyxLQUFLRyxLQUFMLEdBQWFmLENBQUMsQ0FBQ2dCLHlCQUFoQixJQUE2QyxDQUF4RDtBQUNBO0FBUlI7O0FBV0EsYUFBTztBQUFFckIsUUFBQUEsSUFBSSxFQUFKQSxJQUFGO0FBQVFDLFFBQUFBLElBQUksRUFBSkE7QUFBUixPQUFQO0FBQ0g7Ozs4QkFFU3VCLEcsRUFBSztBQUNYLGNBQVFBLEdBQVI7QUFDSSxhQUFLbkIsQ0FBQyxDQUFDRyxNQUFQO0FBQ0EsYUFBS0gsQ0FBQyxDQUFDSSxRQUFQO0FBQ0ksaUJBQU9KLENBQUMsQ0FBQ2tCLHFCQUFUOztBQUNKLGFBQUtsQixDQUFDLENBQUNLLFFBQVA7QUFDQSxhQUFLTCxDQUFDLENBQUNNLFNBQVA7QUFDSSxpQkFBT04sQ0FBQyxDQUFDYSxtQkFBVDs7QUFDSjtBQUNJLGlCQUFPYixDQUFDLENBQUNrQixxQkFBVDtBQVJSO0FBVUg7Ozs7RUF2RXdCRSxvQjs7ZUEwRWQ5QixjIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qYXJlZC9EZXNrdG9wL0NvZGluZy9hY3Rpb25fcnBnL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBDIGZyb20gJy4vY29uc3RhbnRzJ1xuaW1wb3J0IE1vdmVtZW50IGZyb20gJy4vbW92ZW1lbnQnXG5cbmNsYXNzIFdlYXBvbk1vdmVtZW50IGV4dGVuZHMgTW92ZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgc3VwZXIoYXR0cmlidXRlcylcbiAgICB9XG5cbiAgICBnZXROZXdQb3NVc2luZ0Rpcih0eXBlLCBtb3ZlRGF0YSkge1xuICAgICAgICBjb25zdCB7IG9sZFgsIG9sZFkgfSA9IHRoaXMuZ2V0Q29vcmRJbmZvKHR5cGUsIG1vdmVEYXRhKVxuICAgICAgICBsZXQgbmV3WCA9IG9sZFhcbiAgICAgICAgbGV0IG5ld1kgPSBvbGRZXG4gICAgICAgIGNvbnN0IGRlbHRhID0gQy5XRUFQT05fRElTVFxuXG4gICAgICAgIHN3aXRjaCAobW92ZURhdGEuaGVyb0Rpcikge1xuICAgICAgICAgICAgY2FzZSBDLkRJUl9VUDpcbiAgICAgICAgICAgICAgICBuZXdZID0gbmV3WSAtIGRlbHRhXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEMuRElSX0RPV046XG4gICAgICAgICAgICAgICAgbmV3WSA9IG5ld1kgKyBkZWx0YVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBDLkRJUl9MRUZUOlxuICAgICAgICAgICAgICAgIG5ld1ggPSBuZXdYIC0gZGVsdGFcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgQy5ESVJfUklHSFQ6XG4gICAgICAgICAgICAgICAgbmV3WCA9IG5ld1ggKyBkZWx0YVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBDLkRJUl9MRUZUX1VQOlxuICAgICAgICAgICAgICAgIG5ld1ggPSBuZXdYIC0gZGVsdGFcbiAgICAgICAgICAgICAgICBuZXdZID0gbmV3WSAtIGRlbHRhXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEMuRElSX1JJR0hUX1VQOlxuICAgICAgICAgICAgICAgIG5ld1ggPSBuZXdYICsgZGVsdGFcbiAgICAgICAgICAgICAgICBuZXdZID0gbmV3WSAtIGRlbHRhXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEMuRElSX0RPV05fTEVGVDpcbiAgICAgICAgICAgICAgICBuZXdYID0gbmV3WCAtIGRlbHRhXG4gICAgICAgICAgICAgICAgbmV3WSA9IG5ld1kgKyBkZWx0YVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBDLkRJUl9ET1dOX1JJR0hUOlxuICAgICAgICAgICAgICAgIG5ld1ggPSBuZXdYICsgZGVsdGFcbiAgICAgICAgICAgICAgICBuZXdZID0gbmV3WSArIGRlbHRhXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICh7IG5ld1gsIG5ld1kgfSlcbiAgICB9XG5cbiAgICBnZXRDb29yZEluZm8odHlwZSwgeyB4LCB5IH0pIHtcbiAgICAgICAgbGV0IG9sZFgsIG9sZFk7XG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgY2FzZSBDLldFQVBPTl9ESVJfVkVSVElDQUw6XG4gICAgICAgICAgICAgICAgb2xkWCA9IHggKyAoQy5IRVJPX1NQUklURV9TQ0FMRURfV0lEVEggLSB0aGlzLndpZHRoKSAvIDJcbiAgICAgICAgICAgICAgICBvbGRZID0geSArIChDLkhFUk9fU1BSSVRFX1NDQUxFRF9MRU5HVEggLSB0aGlzLmxlbmd0aCkgLyAyXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEMuV0VBUE9OX0RJUl9IT1JJWk9OVEFMOlxuICAgICAgICAgICAgICAgIG9sZFggPSB4IC0gKHRoaXMubGVuZ3RoIC0gQy5IRVJPX1NQUklURV9TQ0FMRURfV0lEVEgpIC8gMlxuICAgICAgICAgICAgICAgIG9sZFkgPSB5IC0gKHRoaXMud2lkdGggLSBDLkhFUk9fU1BSSVRFX1NDQUxFRF9MRU5HVEgpIC8gMlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHsgb2xkWCwgb2xkWSB9XG4gICAgfVxuXG4gICAgZ2V0TmV3RGlyKGRpcikge1xuICAgICAgICBzd2l0Y2ggKGRpcikge1xuICAgICAgICAgICAgY2FzZSBDLkRJUl9VUDpcbiAgICAgICAgICAgIGNhc2UgQy5ESVJfRE9XTjpcbiAgICAgICAgICAgICAgICByZXR1cm4gQy5XRUFQT05fRElSX0hPUklaT05UQUxcbiAgICAgICAgICAgIGNhc2UgQy5ESVJfTEVGVDpcbiAgICAgICAgICAgIGNhc2UgQy5ESVJfUklHSFQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIEMuV0VBUE9OX0RJUl9WRVJUSUNBTFxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gQy5XRUFQT05fRElSX0hPUklaT05UQUxcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgV2VhcG9uTW92ZW1lbnRcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "weapon_movement.js"
      ],
      "names": [
        "WeaponMovement",
        "attributes",
        "type",
        "moveData",
        "getCoordInfo",
        "oldX",
        "oldY",
        "newX",
        "newY",
        "delta",
        "C",
        "WEAPON_DIST",
        "heroDir",
        "DIR_UP",
        "DIR_DOWN",
        "DIR_LEFT",
        "DIR_RIGHT",
        "DIR_LEFT_UP",
        "DIR_RIGHT_UP",
        "DIR_DOWN_LEFT",
        "DIR_DOWN_RIGHT",
        "x",
        "y",
        "WEAPON_DIR_VERTICAL",
        "HERO_SPRITE_SCALED_WIDTH",
        "width",
        "HERO_SPRITE_SCALED_LENGTH",
        "length",
        "WEAPON_DIR_HORIZONTAL",
        "dir",
        "Movement"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/src/",
      "sourcesContent": [
        "import * as C from './constants'\nimport Movement from './movement'\n\nclass WeaponMovement extends Movement {\n    constructor(attributes) {\n        super(attributes)\n    }\n\n    getNewPosUsingDir(type, moveData) {\n        const { oldX, oldY } = this.getCoordInfo(type, moveData)\n        let newX = oldX\n        let newY = oldY\n        const delta = C.WEAPON_DIST\n\n        switch (moveData.heroDir) {\n            case C.DIR_UP:\n                newY = newY - delta\n                break;\n            case C.DIR_DOWN:\n                newY = newY + delta\n                break;\n            case C.DIR_LEFT:\n                newX = newX - delta\n                break;\n            case C.DIR_RIGHT:\n                newX = newX + delta\n                break;\n            case C.DIR_LEFT_UP:\n                newX = newX - delta\n                newY = newY - delta\n                break;\n            case C.DIR_RIGHT_UP:\n                newX = newX + delta\n                newY = newY - delta\n                break;\n            case C.DIR_DOWN_LEFT:\n                newX = newX - delta\n                newY = newY + delta\n                break;\n            case C.DIR_DOWN_RIGHT:\n                newX = newX + delta\n                newY = newY + delta\n                break;\n        }\n        return ({ newX, newY })\n    }\n\n    getCoordInfo(type, { x, y }) {\n        let oldX, oldY;\n        switch (type) {\n            case C.WEAPON_DIR_VERTICAL:\n                oldX = x + (C.HERO_SPRITE_SCALED_WIDTH - this.width) / 2\n                oldY = y + (C.HERO_SPRITE_SCALED_LENGTH - this.length) / 2\n                break;\n            case C.WEAPON_DIR_HORIZONTAL:\n                oldX = x - (this.length - C.HERO_SPRITE_SCALED_WIDTH) / 2\n                oldY = y - (this.width - C.HERO_SPRITE_SCALED_LENGTH) / 2\n                break;\n        }\n\n        return { oldX, oldY }\n    }\n\n    getNewDir(dir) {\n        switch (dir) {\n            case C.DIR_UP:\n            case C.DIR_DOWN:\n                return C.WEAPON_DIR_HORIZONTAL\n            case C.DIR_LEFT:\n            case C.DIR_RIGHT:\n                return C.WEAPON_DIR_VERTICAL\n            default:\n                return C.WEAPON_DIR_HORIZONTAL\n        }\n    }\n}\n\nexport default WeaponMovement\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610237446230
  },
  "{\"sourceRoot\":\"/Users/jared/Desktop/Coding/action_rpg/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jared/Desktop/Coding/action_rpg\",\"filename\":\"/Users/jared/Desktop/Coding/action_rpg/test/hero_movement_test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jared/Desktop/Coding/action_rpg\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jared/Desktop/Coding/action_rpg",
      "filename": "/Users/jared/Desktop/Coding/action_rpg/test/hero_movement_test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jared/Desktop/Coding/action_rpg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jared/Desktop/Coding/action_rpg/test/hero_movement_test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jared/Desktop/Coding/action_rpg/test/hero_movement_test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
        "sourceFileName": "hero_movement_test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar chai = _interopRequireWildcard(require(\"chai\"));\n\nvar C = _interopRequireWildcard(require(\"../src/constants\"));\n\nvar _hero_movement = _interopRequireDefault(require(\"../src/hero_movement\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// import assert from 'assert';\nvar should = chai.should();\nvar expect = chai.expect;\ndescribe('Hero Movement Object Tests', function () {\n  var attributes = {\n    length: 20,\n    width: 10\n  };\n  var movement = new _hero_movement[\"default\"](attributes);\n  it('should create an object with only the given attributes and defaults', function () {\n    var possibleMovementKeys = ['length', 'width'];\n    var myObjKeys = Object.keys(movement);\n    movement.should.have.property('length').equal(20);\n    movement.should.have.property('width').equal(10);\n    expect(possibleMovementKeys).to.include.members(myObjKeys);\n  });\n  it('should change the hero\\'s direction if receiving valid input', function () {\n    var newDir = {\n      'right': true\n    };\n    var currentDir = 'up';\n    var expectedDir = 'right';\n    var changedDir = movement.changeDir(newDir, currentDir);\n    expect(changedDir).to.eql(expectedDir);\n  });\n  it('should change the heroes direction when receiving opposite directions', function () {\n    var newDir = [['right', true], ['left', true]];\n    var currentDir = 'right';\n    var expectedDir = [['left', true]];\n    var oppositeDir = movement.filterExtraKeys(newDir, currentDir);\n    expect(oppositeDir).to.eql(expectedDir);\n    newDir = [['down', true], ['up', true]];\n    currentDir = 'up';\n    expectedDir = [['down', true]];\n    oppositeDir = movement.filterExtraKeys(newDir, currentDir);\n    expect(oppositeDir).to.eql(expectedDir);\n  });\n  it('should get new coordinates when the hero moves', function () {\n    var moveData = {\n      x: 50,\n      y: 100,\n      dir: 'down',\n      vel: C.HERO_NORMAL_VEL\n    };\n    var expectedPos = {\n      newX: 50,\n      newY: 104\n    };\n    var newPos = movement.getNewPosUsingDir(moveData);\n    expect(expectedPos).to.eql(newPos);\n    moveData.dir = 'up';\n    expectedPos = {\n      newX: 50,\n      newY: 96\n    };\n    newPos = movement.getNewPosUsingDir(moveData);\n    expect(expectedPos).to.eql(newPos);\n    moveData.dir = 'left';\n    expectedPos = {\n      newX: 46,\n      newY: 100\n    };\n    newPos = movement.getNewPosUsingDir(moveData);\n    expect(expectedPos).to.eql(newPos);\n    moveData.dir = 'right';\n    expectedPos = {\n      newX: 54,\n      newY: 100\n    };\n    newPos = movement.getNewPosUsingDir(moveData);\n    expect(expectedPos).to.eql(newPos);\n    moveData.dir = 'left up';\n    expectedPos = {\n      newX: 46,\n      newY: 96\n    };\n    newPos = movement.getNewPosUsingDir(moveData);\n    expect(expectedPos).to.eql(newPos);\n    moveData.dir = 'right up';\n    expectedPos = {\n      newX: 54,\n      newY: 96\n    };\n    newPos = movement.getNewPosUsingDir(moveData);\n    expect(expectedPos).to.eql(newPos);\n    moveData.dir = 'down left';\n    expectedPos = {\n      newX: 46,\n      newY: 104\n    };\n    newPos = movement.getNewPosUsingDir(moveData);\n    expect(expectedPos).to.eql(newPos);\n    moveData.dir = 'down right';\n    expectedPos = {\n      newX: 54,\n      newY: 104\n    };\n    newPos = movement.getNewPosUsingDir(moveData);\n    expect(expectedPos).to.eql(newPos);\n  });\n  it('should move the hero', function () {\n    var moveData = {\n      x: 50,\n      y: 100,\n      dir: 'up',\n      vel: C.HERO_NORMAL_VEL\n    };\n    var expectedPos = {\n      x: moveData.x,\n      y: moveData.y - 4,\n      moved: true\n    };\n    var newPos = movement.move(moveData);\n    expect(expectedPos).to.eql(newPos);\n  });\n  it('should not move the hero if they would leave the playing screen', function () {\n    var moveData = {\n      x: 50,\n      y: C.PLAY_AREA_DOWN_BOUNDARY,\n      dir: 'down',\n      vel: C.HERO_NORMAL_VEL\n    };\n    var expectedPos = {\n      x: moveData.x,\n      y: moveData.y,\n      moved: false\n    };\n    var newPos = movement.move(moveData);\n    expect(expectedPos).to.eql(newPos);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "hero_movement_test.js"
      ],
      "names": [
        "should",
        "chai",
        "expect",
        "describe",
        "attributes",
        "length",
        "width",
        "movement",
        "HeroMovement",
        "it",
        "possibleMovementKeys",
        "myObjKeys",
        "Object",
        "keys",
        "have",
        "property",
        "equal",
        "to",
        "include",
        "members",
        "newDir",
        "currentDir",
        "expectedDir",
        "changedDir",
        "changeDir",
        "eql",
        "oppositeDir",
        "filterExtraKeys",
        "moveData",
        "x",
        "y",
        "dir",
        "vel",
        "C",
        "HERO_NORMAL_VEL",
        "expectedPos",
        "newX",
        "newY",
        "newPos",
        "getNewPosUsingDir",
        "moved",
        "move",
        "PLAY_AREA_DOWN_BOUNDARY"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jared/Desktop/Coding/action_rpg/test/",
      "sourcesContent": [
        "// import assert from 'assert';\nimport * as chai from 'chai';\nimport * as C from '../src/constants'\nimport HeroMovement from '../src/hero_movement'\n\nlet should = chai.should();\nlet expect = chai.expect;\n\n\ndescribe('Hero Movement Object Tests', () => {\n    const attributes = { length: 20, width: 10 }\n    let movement = new HeroMovement(attributes)\n\n    it('should create an object with only the given attributes and defaults', () => {\n        const possibleMovementKeys = ['length', 'width']\n        const myObjKeys = Object.keys(movement)\n\n        movement.should.have.property('length').equal(20)\n        movement.should.have.property('width').equal(10)\n        expect(possibleMovementKeys).to.include.members(myObjKeys)\n    });\n\n    it('should change the hero\\'s direction if receiving valid input', () => {\n        let newDir = { 'right': true };\n        let currentDir = 'up'\n        let expectedDir = 'right'\n        let changedDir = movement.changeDir(newDir, currentDir)\n        expect(changedDir).to.eql(expectedDir)\n    })\n\n    it('should change the heroes direction when receiving opposite directions', () => {\n        let newDir = [['right', true], ['left', true]];\n        let currentDir = 'right'\n        let expectedDir = [['left', true]]\n        let oppositeDir = movement.filterExtraKeys(newDir, currentDir)\n        expect(oppositeDir).to.eql(expectedDir)\n        \n        newDir = [['down', true], ['up', true]];\n        currentDir = 'up'\n        expectedDir = [['down', true]]\n        oppositeDir = movement.filterExtraKeys(newDir, currentDir)\n        expect(oppositeDir).to.eql(expectedDir)\n    })\n\n    it('should get new coordinates when the hero moves', () => {\n        let moveData = {\n            x: 50,\n            y: 100,\n            dir: 'down',\n            vel: C.HERO_NORMAL_VEL,\n        }\n        let expectedPos = { newX: 50, newY: 104 }\n        let newPos = movement.getNewPosUsingDir(moveData)\n        expect(expectedPos).to.eql(newPos)\n\n        moveData.dir = 'up'\n        expectedPos = { newX: 50, newY: 96 }\n        newPos = movement.getNewPosUsingDir(moveData)\n        expect(expectedPos).to.eql(newPos)\n\n        moveData.dir = 'left'\n        expectedPos = { newX: 46, newY: 100 }\n        newPos = movement.getNewPosUsingDir(moveData)\n        expect(expectedPos).to.eql(newPos)\n\n        moveData.dir = 'right'\n        expectedPos = { newX: 54, newY: 100 }\n        newPos = movement.getNewPosUsingDir(moveData)\n        expect(expectedPos).to.eql(newPos)\n\n        moveData.dir = 'left up'\n        expectedPos = { newX: 46, newY: 96 }\n        newPos = movement.getNewPosUsingDir(moveData)\n        expect(expectedPos).to.eql(newPos)\n\n        moveData.dir = 'right up'\n        expectedPos = { newX: 54, newY: 96 }\n        newPos = movement.getNewPosUsingDir(moveData)\n        expect(expectedPos).to.eql(newPos)\n\n        moveData.dir = 'down left'\n        expectedPos = { newX: 46, newY: 104 }\n        newPos = movement.getNewPosUsingDir(moveData)\n        expect(expectedPos).to.eql(newPos)\n\n        moveData.dir = 'down right'\n        expectedPos = { newX: 54, newY: 104 }\n        newPos = movement.getNewPosUsingDir(moveData)\n        expect(expectedPos).to.eql(newPos)\n    })\n\n    it('should move the hero', () => {\n        let moveData = {\n            x: 50,\n            y: 100,\n            dir: 'up',\n            vel: C.HERO_NORMAL_VEL,\n        }\n        let expectedPos = { x: moveData.x, y: moveData.y - 4, moved: true }\n        let newPos = movement.move(moveData)\n\n        expect(expectedPos).to.eql(newPos)\n    })\n\n    it('should not move the hero if they would leave the playing screen', () => {\n        let moveData = {\n            x: 50,\n            y: C.PLAY_AREA_DOWN_BOUNDARY,\n            dir: 'down',\n            vel: C.HERO_NORMAL_VEL,\n        }\n        let expectedPos = { x: moveData.x, y: moveData.y, moved: false }\n        let newPos = movement.move(moveData)\n\n        expect(expectedPos).to.eql(newPos)\n    })\n\n\n    \n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1610400875375
  }
}